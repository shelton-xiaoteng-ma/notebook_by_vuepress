import{_ as n,Y as s,Z as a,a4 as t}from"./framework-957baa9a.js";const p={},e=t(`<h1 id="_01-nest" tabindex="-1"><a class="header-anchor" href="#_01-nest" aria-hidden="true">#</a> 01 Nest</h1><h2 id="_1-项目启动" tabindex="-1"><a class="header-anchor" href="#_1-项目启动" aria-hidden="true">#</a> 1 项目启动</h2><ol><li>安装 <code>pnpm add -g @nestjs/cli nodemon ts-node</code></li><li>启动 <code>nest new nestProject &amp;&amp; cd &quot;$_&quot;</code></li><li>vscode配置 <ol><li>prisma插件</li></ol></li><li>项目配置 <ol><li><p><code>.prettierrc</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">{</span>
    <span class="token key atrule">&quot;arrowParens&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;bracketSameLine&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;bracketSpacing&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;embeddedLanguageFormatting&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;auto&quot;</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;htmlWhitespaceSensitivity&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;css&quot;</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;insertPragma&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;jsxSingleQuote&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;printWidth&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;proseWrap&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;quoteProps&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;as-needed&quot;</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;requirePragma&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;semi&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;singleQuote&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;tabWidth&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;trailingComma&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;useTabs&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;vueIndentScriptAndStyle&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;singleAttributePerLine&quot;</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li></ol><h2 id="_2-认识项目结构" tabindex="-1"><a class="header-anchor" href="#_2-认识项目结构" aria-hidden="true">#</a> 2 认识项目结构</h2><ol><li>项目入口<code>src/main.ts</code></li><li>启动 <code>nest start --watch</code> or <code>pnpm start:dev</code></li><li>module/controller/service</li><li>快捷键 <ul><li><code>Shift + Option + O</code> 整理import语句</li><li><code>Cmd + i</code> 触发建议</li></ul></li><li>访问<code>.env</code>环境变量 <ul><li><p><code>npm install @nestjs/config dotenv</code></p></li><li><p>module</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// app.module.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/config&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span>
        ConfigModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            isGlobal<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Makes the config module available globally</span>
            <span class="token comment">// 默认.env, 也可指定 .env.development, .env.production</span>
            envFilePath<span class="token operator">:</span> <span class="token string">&#39;.custom.env&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// other modules...</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// other properties...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>访问环境变量</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/config&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SomeService</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> configService<span class="token operator">:</span> ConfigService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token function">getDatabaseConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>configService<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;DATABASE_HOST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>configService<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;DATABASE_PORT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Database is running on </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h2 id="_3-服务" tabindex="-1"><a class="header-anchor" href="#_3-服务" aria-hidden="true">#</a> 3 服务</h2><ol><li><p>创建服务<code>nest g s newservice --no-flat --no-spec</code></p><ul><li><code>--no-flat</code> 文件结构:<code>src/hdservice/hdservice.service.ts</code>, <code>--flat</code>文件结构: <code>src/hdservice.service.ts</code></li><li><code>--no-spec</code> 无spec文件</li></ul></li><li><p>基本类型做服务的注册</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> ConfigService <span class="token operator">=</span> <span class="token punctuation">{</span>
    provide<span class="token operator">:</span> <span class="token string">&#39;ConfigService&#39;</span><span class="token punctuation">,</span>
    useValue<span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    controllers<span class="token operator">:</span> <span class="token punctuation">[</span>AppController<span class="token punctuation">]</span><span class="token punctuation">,</span>
    providers<span class="token operator">:</span> <span class="token punctuation">[</span>AppService<span class="token punctuation">,</span> ConfigService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>动态服务</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//app.module.ts</span>
<span class="token keyword">const</span> hdService <span class="token operator">=</span> <span class="token punctuation">{</span>
    provide<span class="token operator">:</span> <span class="token string">&#39;AppService&#39;</span><span class="token punctuation">,</span>
    useClass<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">==</span> <span class="token string">&#39;dev&#39;</span> <span class="token operator">?</span> DevService <span class="token operator">:</span> AppService
<span class="token punctuation">}</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    controllers<span class="token operator">:</span> <span class="token punctuation">[</span>AppController<span class="token punctuation">]</span><span class="token punctuation">,</span>
    providers<span class="token operator">:</span> <span class="token punctuation">[</span>hdService<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token comment">//app.controller.ts</span>
<span class="token comment">// Inject(&#39;hdService&#39;) 对应 hdService.provide</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppController</span><span class="token punctuation">{</span>
    <span class="token comment">// construct(private readonly appService: appService){}</span>
    <span class="token function">construct</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Inject</span></span><span class="token punctuation">(</span><span class="token string">&#39;hdService&#39;</span><span class="token punctuation">)</span> <span class="token keyword">private</span> hd<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">get</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hd<span class="token punctuation">.</span>content
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>模块共享服务</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    controllers<span class="token operator">:</span> <span class="token punctuation">[</span>CustomController<span class="token punctuation">]</span><span class="token punctuation">,</span>
    providers<span class="token operator">:</span> <span class="token punctuation">[</span>CustomService<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 供其他模块使用</span>
    exports<span class="token operator">:</span> <span class="token punctuation">[</span>CustomService<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CustomModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>异步服务</p></li></ol><h2 id="_4-模块" tabindex="-1"><a class="header-anchor" href="#_4-模块" aria-hidden="true">#</a> 4 模块</h2><ol><li><p>创建模块<code>nest g mo article</code></p></li><li><p>供其他模块使用</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 1. 全局使用</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Global</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    controllers<span class="token operator">:</span> <span class="token punctuation">[</span>CustomController<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CustomModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// 2. 特定模块使用, 在需要使用的模块中导入</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span>CustomModule<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>动态模块(dynamicModule)</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 1. 创建</span>
<span class="token comment">//database.module.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Module<span class="token punctuation">,</span> DynamicModule<span class="token punctuation">,</span> Global <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createConnection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Connection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DatabaseModuleOptions</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;postgres&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;sqlite&#39;</span><span class="token punctuation">;</span>
  host<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  port<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  database<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Global</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">DatabaseModule</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">forRoot</span><span class="token punctuation">(</span>options<span class="token operator">:</span> DatabaseModuleOptions<span class="token punctuation">)</span><span class="token operator">:</span> DynamicModule <span class="token punctuation">{</span>
    <span class="token keyword">const</span> connectionProvider <span class="token operator">=</span> <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&#39;DATABASE_CONNECTION&#39;</span><span class="token punctuation">,</span>
      useFactory<span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Connection<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          type<span class="token operator">:</span> options<span class="token punctuation">.</span>type<span class="token punctuation">,</span>
          host<span class="token operator">:</span> options<span class="token punctuation">.</span>host<span class="token punctuation">,</span>
          port<span class="token operator">:</span> options<span class="token punctuation">.</span>port<span class="token punctuation">,</span>
          username<span class="token operator">:</span> options<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
          password<span class="token operator">:</span> options<span class="token punctuation">.</span>password<span class="token punctuation">,</span>
          database<span class="token operator">:</span> options<span class="token punctuation">.</span>database<span class="token punctuation">,</span>
          entities<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// add your entities here</span>
          synchronize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// don&#39;t use synchronize in production</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      module<span class="token operator">:</span> DatabaseModule<span class="token punctuation">,</span>
      providers<span class="token operator">:</span> <span class="token punctuation">[</span>connectionProvider<span class="token punctuation">]</span><span class="token punctuation">,</span>
      exports<span class="token operator">:</span> <span class="token punctuation">[</span>connectionProvider<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2. 导入</span>
<span class="token comment">// app.module.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DatabaseModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./database.module&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    DatabaseModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&#39;postgres&#39;</span><span class="token punctuation">,</span>
      host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
      port<span class="token operator">:</span> <span class="token number">5432</span><span class="token punctuation">,</span>
      username<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>
      password<span class="token operator">:</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">,</span>
      database<span class="token operator">:</span> <span class="token string">&#39;mydb&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// 3. 使用</span>
<span class="token comment">// some.service.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable<span class="token punctuation">,</span> Inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Connection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SomeService</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Inject</span></span><span class="token punctuation">(</span><span class="token string">&#39;DATABASE_CONNECTION&#39;</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">readonly</span> connection<span class="token operator">:</span> Connection<span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM my_table&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,9),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","01_nest_basic.html.vue"]]);export{r as default};
