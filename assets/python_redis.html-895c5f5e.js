import{_ as e,Y as p,Z as o,a0 as n,a1 as s,a2 as t,a4 as c,E as i}from"./framework-957baa9a.js";const l={},u=n("h1",{id:"python-redis",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-redis","aria-hidden":"true"},"#"),s(" Python Redis")],-1),r={href:"https://redis.io/commands",target:"_blank",rel:"noopener noreferrer"},d={href:"https://wizardforcel.gitbooks.io/redis-doc/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/andymccurdy/redis-py",target:"_blank",rel:"noopener noreferrer"},m=c(`<h2 id="_1-redis连接" tabindex="-1"><a class="header-anchor" href="#_1-redis连接" aria-hidden="true">#</a> 1. redis连接</h2><p>redis提供两个类Redis和StrictRedis, StrictRedis用来实现大部分官方的命令,并使用官方的语法和命令,Redis是StrictRedis的子类,用于向后兼容旧版本的redis-py.</p><p>redis连接实例是线程安全的,可以直接将redis设置为全局变量,直接使用. <strong>安装redis依赖</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pip <span class="token function">install</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>连接redis时,加上decode_response=True,写入的键值对中的value为str类型,不加这个参数写入的则为字节类型.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> redis
r <span class="token operator">=</span> redis<span class="token punctuation">.</span>StrictRedis<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span> decode_responses<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment"># host是redis主机，需要redis服务端和客户端都启动 redis默认端口是6379, 密码验证</span>
r<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;junxi&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># key是&quot;foo&quot; value是&quot;bar&quot; 将键值对存入redis缓存</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 取出键name对应的值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连接池" tabindex="-1"><a class="header-anchor" href="#连接池" aria-hidden="true">#</a> 连接池</h3><p>默认,每个Redis实例都会维护一个自己的连接池.可以直接建立一个连接池,实现多个Redis实例共享一个连接池</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> redis    <span class="token comment"># 导入redis模块，通过python操作redis 也可以直接在redis主机的服务端操作缓存数据库</span>

pool <span class="token operator">=</span> redis<span class="token punctuation">.</span>ConnectionPool<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span> decode_responses<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>   <span class="token comment"># host是redis主机，需要redis服务端和客户端都起着 redis默认端口是6379</span>
r <span class="token operator">=</span> redis<span class="token punctuation">.</span>StrictRedis<span class="token punctuation">(</span>connection_pool<span class="token operator">=</span>pool<span class="token punctuation">)</span>
r<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;male&#39;</span><span class="token punctuation">)</span>     <span class="token comment"># key是&quot;gender&quot; value是&quot;male&quot; 将键值对存入redis缓存</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># gender 取出键male对应的值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建redis对象时-支持一些参数" tabindex="-1"><a class="header-anchor" href="#创建redis对象时-支持一些参数" aria-hidden="true">#</a> 创建Redis对象时，支持一些参数</h3><ol><li>host</li><li>port</li><li>password</li><li>db # 选择存到第几个数据库</li><li>socket_timeout=None # 超时时间</li><li>connection_pool=None # 可以直接使用连接池</li><li>charset=&#39;utf-8&#39; # redis入库默认utf-8，如果需要编码，结果第八项使用</li><li>decode_responses=False # 修改编码，这一项为True，(charset=&#39;GBK &#39;, decode_responses=True)</li><li>errors=&#39;strict&#39;</li><li>unix_socket_path=None</li></ol><h2 id="_2-redis-数据操作" tabindex="-1"><a class="header-anchor" href="#_2-redis-数据操作" aria-hidden="true">#</a> 2. redis 数据操作</h2><p>参考教程：https://www.w3cschool.cn/redis_all_about/redis_all_about-jrvk26ug.html</p><h3 id="_1-redis-key操作" tabindex="-1"><a class="header-anchor" href="#_1-redis-key操作" aria-hidden="true">#</a> 1. redis key操作</h3><ol><li><p>列出所有key</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1.</span> r<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">2.</span> keys <span class="token operator">*</span> <span class="token comment"># redis-cli</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>判断某个key是否存在</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1.</span> r<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>
<span class="token number">2.</span> exists key <span class="token comment"># redis-cli</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除指定的key</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">del</span> key1 key2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token comment"># redis-cli</span>

<span class="token comment"># redis批量删除（通配符)</span>
r<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token operator">*</span>r<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token string">&#39;/vender*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>返回指定key的value类型</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">type</span> key <span class="token comment"># redis-cli (none不存在，string，list，set)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>随机取一个key</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span>randomkey<span class="token punctuation">(</span><span class="token punctuation">)</span>
randomkey <span class="token comment"># redis-cli</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重命名一个key</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span>rename<span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>renamenx<span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">)</span>
rename oldkey newkey <span class="token operator">|</span> renamenx oldkey newkey  <span class="token comment"># redis-cli 区别，前面的如果newkey存在，则会被覆盖，后面的则会返回错误</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>key的超时设置</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1.</span> redis<span class="token operator">-</span>python
    <span class="token comment"># 设置过期时间</span>
    r<span class="token punctuation">.</span>expire<span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token comment"># 设置10s后过期</span>
    extime <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    extime<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S %f&#39;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>expireat<span class="token punctuation">(</span><span class="token string">&#39;key2&#39;</span><span class="token punctuation">,</span> extime<span class="token punctuation">)</span> <span class="token comment"># 可指定datetime和时间戳</span>
    <span class="token comment"># 查看剩余过期时间(秒)</span>
    r<span class="token punctuation">.</span>ttl<span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>pttl<span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 毫秒</span>

<span class="token number">2.</span> redis<span class="token operator">-</span>cli
    <span class="token operator">-</span> expire key seconds    单位是秒。返回<span class="token number">1</span>成功，<span class="token number">0</span>表示key已经设置过过期时间或者不存在。如果想消除超时则使用persist key。如果希望采用绝对超时，则使用expireat命令。
    <span class="token operator">-</span> ttl key   返回设置过过期时间的key的剩余过期秒数 <span class="token operator">-</span><span class="token number">1</span>表示没有设置过过期时间，对于不存在的key<span class="token punctuation">,</span>返回<span class="token operator">-</span><span class="token number">2</span>。
    <span class="token operator">-</span> pexpire key mseconds 设置生命周期。
    <span class="token operator">-</span> pttl  key 以毫秒返回生命周期。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_2-redis-string-操作" tabindex="-1"><a class="header-anchor" href="#_2-redis-string-操作" aria-hidden="true">#</a> 2. redis String 操作</h3><ol><li><p>设值</p><ul><li>set 单个值</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> ex<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> px<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> nx<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> xx<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
Redis中设置值<span class="token punctuation">,</span>默认为不存在则创建<span class="token punctuation">,</span> 存在则修改
<span class="token comment"># ex 过期时间(s)</span>
<span class="token comment"># px 过期时间(ms)</span>
<span class="token comment"># nx 如果为True, name不存在时set才操作(set只支持新增)</span>
<span class="token comment"># xx 如果设置为True, name存在时, set才操作(set只支持修改)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>mset 批量添加</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 支持两种方式</span>
mset<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
r<span class="token punctuation">.</span>mset<span class="token punctuation">(</span>k1<span class="token operator">=</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span> k2<span class="token operator">=</span><span class="token string">&quot;v2&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 这里k1 k2不能带引号,一次设置多个键值对</span>
r<span class="token punctuation">.</span>mset<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;k1:&quot;</span>v1<span class="token string">&quot;, &quot;</span>k2<span class="token string">&quot;:&quot;</span>v2&quot;<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment"># 这里k1 k2不能带引号,一次设置多个键值对</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>取值</p><ul><li>get 获取单个值</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;useful_proxy&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>mget 批量获取</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 同样支持两种</span>
mget<span class="token punctuation">(</span>keys<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span>
r<span class="token punctuation">.</span>mget<span class="token punctuation">(</span><span class="token string">&quot;k1&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;k2&#39;</span><span class="token punctuation">)</span>
r<span class="token punctuation">.</span>mget<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;k1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;k2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>读取后重设</p><ul><li>getset(name, value) # 设置新值,并获取旧值</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span>getset<span class="token punctuation">(</span><span class="token string">&#39;food&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;barbecue&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>增减操作，如果value不是int，则错误</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span>incr<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>   <span class="token comment"># 加1 不存在默认为0  </span>
r<span class="token punctuation">.</span>decr<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>   <span class="token comment"># 减1</span>
r<span class="token punctuation">.</span>incrby<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>   <span class="token comment">#   </span>
r<span class="token punctuation">.</span>decrby<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>   <span class="token comment"># 也可以加一个负数实现</span>
r<span class="token punctuation">.</span>incrbyfloat<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token number">5.1</span><span class="token punctuation">)</span>   <span class="token comment"># 增减浮点数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>追加，截取和改写 字符串</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;strangename&quot;</span><span class="token punctuation">)</span>
r<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;afterfix&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 追加：结果为strangenameafterfix</span>
r<span class="token punctuation">.</span>getrange<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 改写：结果为:stra</span>
r<span class="token punctuation">.</span>substr<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>  <span class="token comment"># 截取，不修改值，结果为：ran</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取字符串长度</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r<span class="token punctuation">.</span>strlen<span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="_3-redis-list-操作" tabindex="-1"><a class="header-anchor" href="#_3-redis-list-操作" aria-hidden="true">#</a> 3. redis list 操作</h3><ol><li><p>基本操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 1. 添加列表</span>
r<span class="token punctuation">.</span>lpush<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 左push 右pop 江湖规矩</span>
r<span class="token punctuation">.</span>lpushx<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 如果存在才push</span>
r<span class="token punctuation">.</span>linsert<span class="token punctuation">(</span>name<span class="token punctuation">,</span> where<span class="token punctuation">,</span> refvalue<span class="token punctuation">,</span> value<span class="token punctuation">)</span>    <span class="token comment"># 特定位置插入（after，before）</span>

<span class="token comment"># 2. 查看长度</span>
r<span class="token punctuation">.</span>llen<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span>   

<span class="token comment"># 3. 查看元素</span>
r<span class="token punctuation">.</span>lindex<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 返回特定位置的元素</span>

<span class="token comment"># 4. 查看一段列表</span>
r<span class="token punctuation">.</span>lrange<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 返回一段列表，这个返回全部列表</span>

<span class="token comment"># 5. 截取列表</span>
N <span class="token operator">=</span> r<span class="token punctuation">.</span>ltrim<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 截取一段列表，改写，返回删掉的元素个数</span>

<span class="token comment"># 6. 删除元素</span>
r<span class="token punctuation">.</span>lrem<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">,</span> value<span class="token punctuation">)</span>    <span class="token comment"># 删除value的值，count为删除的个数，正数从左删除，负数从右删除</span>
r<span class="token punctuation">.</span>lpop<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 删除左侧第一个元素 </span>
r<span class="token punctuation">.</span>rpop<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># </span>
<span class="token comment"># 7. 指定某个下标的值</span>
r<span class="token punctuation">.</span>lset<span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 返回Ture</span>

<span class="token comment"># 阻塞队列</span>
blpop key1<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>keyN timeout   <span class="token comment"># 从左到右扫描返回对第一个非空list进行lpop操作并返回，比如blpop list1 list2 list3 0 ,如果list不存在list2,list3都是非空则对list2做lpop并返回从list2中删除的元素。如果所有的list都是空或不存在，则会阻塞timeout秒，timeout为0表示一直阻塞。当阻塞时，如果有client对key1...keyN中的任意key进行push操作，则第一在这个key上被阻塞的client会立即返回（返回键和值）。如果超时发生，则返回nil。有点像unix的select或者poll。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_4-redis-set-操作" tabindex="-1"><a class="header-anchor" href="#_4-redis-set-操作" aria-hidden="true">#</a> 4. redis set 操作</h3><ol><li><p>所有操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 1. 添加元素</span>
r<span class="token punctuation">.</span>sadd<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1s&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 成功返回1， 已存在返回0，key不对应set则返回错误</span>

<span class="token comment"># 2. 移除元素</span>
r<span class="token punctuation">.</span>srem<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1s&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 成功返回1， 不存在返回0，key不对应set则返回错误</span>

<span class="token comment"># 3. 删除并返回元素</span>
r<span class="token punctuation">.</span>spop<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 不存在报错</span>

<span class="token comment"># 4. 随机取一个元素, 但不删除</span>
r<span class="token punctuation">.</span>srandmember<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 不存在报错</span>

<span class="token comment"># 5. 集合间移动元素</span>
r<span class="token punctuation">.</span>smove<span class="token punctuation">(</span><span class="token string">&#39;set1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;member&#39;</span><span class="token punctuation">)</span> 

<span class="token comment"># 6. 查看集合大小</span>
r<span class="token punctuation">.</span>scard<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 7. 判断是否在集合中</span>
r<span class="token punctuation">.</span>sismember<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2s&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 8. 求交集</span>
r<span class="token punctuation">.</span>sinter<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set2&#39;</span><span class="token punctuation">)</span>
r<span class="token punctuation">.</span>sinterstore<span class="token punctuation">(</span><span class="token string">&#39;new-set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set2&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 将交集保存在新的集合中</span>

<span class="token comment"># 9. 求并集</span>
r<span class="token punctuation">.</span>sunion<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set2&#39;</span><span class="token punctuation">)</span>
r<span class="token punctuation">.</span>sunionstore<span class="token punctuation">(</span><span class="token string">&#39;new-set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set2&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 将并保存在新的集合中</span>

<span class="token comment"># 10. 求差集</span>
r<span class="token punctuation">.</span>sdiff<span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set2&#39;</span><span class="token punctuation">)</span>
r<span class="token punctuation">.</span>sdiffstore<span class="token punctuation">(</span><span class="token string">&#39;new-set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;set2&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 将差集保存在新的集合中</span>

<span class="token comment"># 11. 查看所有元素</span>
r<span class="token punctuation">.</span>smembers<span class="token punctuation">(</span><span class="token string">&#39;new-set&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_5-redis-sorted-set-操作" tabindex="-1"><a class="header-anchor" href="#_5-redis-sorted-set-操作" aria-hidden="true">#</a> 5. redis Sorted Set 操作</h3><h3 id="_6-redis-hash-dict-操作" tabindex="-1"><a class="header-anchor" href="#_6-redis-hash-dict-操作" aria-hidden="true">#</a> 6. redis Hash(dict) 操作</h3><ol><li><p>所有操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 1. 设置hash值</span>
r<span class="token punctuation">.</span>hset<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 成功返回1， field已存在则修改，key不对应hash则返回错误</span>
r<span class="token punctuation">.</span>hsetnx<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># nx 是no exist，如果field存在，返回0，不修改</span>
r<span class="token punctuation">.</span>hmset<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 批量设置多个值</span>

<span class="token comment"># 2. 获取hash值</span>
r<span class="token punctuation">.</span>hget<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># </span>
r<span class="token punctuation">.</span>hmget<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 批量获取多个值</span>

<span class="token comment"># 3. 递增某个域的值</span>
r<span class="token punctuation">.</span>hincrby<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 不是int抛出错误</span>

<span class="token comment"># 4. 判断某个区域是否存在</span>
r<span class="token punctuation">.</span>hexists<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># </span>

<span class="token comment"># 5. 删除</span>
r<span class="token punctuation">.</span>hdel<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key1&#39;</span><span class="token punctuation">)</span> 

<span class="token comment"># 6. 查看域的大小</span>
r<span class="token punctuation">.</span>hlen<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 7. 获取所有域名</span>
r<span class="token punctuation">.</span>hkeys<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 8. 获取所有域的值</span>
r<span class="token punctuation">.</span>hvals<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 9. 获取整个dict</span>
r<span class="token punctuation">.</span>hgetall<span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,24);function v(b,g){const a=i("ExternalLinkIcon");return p(),o("div",null,[u,n("ol",null,[n("li",null,[n("a",r,[s("官网提供的可搜索的命令"),t(a)])]),n("li",null,[n("a",d,[s("翻译中文文档"),t(a)])]),n("li",null,[n("a",k,[s("源代码"),t(a)])])]),m])}const y=e(l,[["render",v],["__file","python_redis.html.vue"]]);export{y as default};
