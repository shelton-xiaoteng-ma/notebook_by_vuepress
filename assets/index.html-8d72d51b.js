import{_ as n,Y as s,Z as e,$ as t,a0 as a,a1 as o,a4 as p}from"./framework-957baa9a.js";const c={},l=a("h1",{id:"由-notebook-切换-blog",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#由-notebook-切换-blog","aria-hidden":"true"},"#"),o(" 由 notebook 切换 blog")],-1),i=p(`<p><code>好记性不如烂笔头</code>, 当前项目以notebook的方式已经维护了接近5年, 也归纳了一些技术思考和实践. 最初的思路是按知识结构归类, 而实际上在解决某一问题时, 通常会涉及多个知识点, 之前的方式并不能很好的体现这一过程, 所以调整了目录结构, 之后将会重点展示blog部分, 变动如下:</p><ol><li><p>切换域名<code>blog</code>, 依旧部署在github, 通过将静态文件部署到公开仓库, 实现自动化发布</p></li><li><p>主页/时间线只展示<code>blog</code>目录的文件, 其他文档仍可在导航栏访问, 实现:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/theme.ts</span>
blog<span class="token operator">:</span> <span class="token punctuation">{</span>
  autoExcerpt<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token comment">//   filter: (page) =&gt; Boolean(page.filePathRelative) &amp;&amp; !page.frontmatter.home &amp;&amp; page.filePathRelative?.includes(&#39;blog&#39;)</span>
  <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>filePathRelative<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>page<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>home <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span><span class="token string">&#39;blog&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>el <span class="token operator">=&gt;</span> page<span class="token punctuation">.</span>filePathRelative<span class="token operator">?.</span><span class="token function">includes</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>规范化标签, 体系化文档使用<code>category: Doc</code>, blog使用<code>category: Tech/Learning English/Daily</code></p></li></ol>`,2);function r(u,d){return s(),e("div",null,[l,t(" more "),i])}const m=n(c,[["render",r],["__file","index.html.vue"]]);export{m as default};
