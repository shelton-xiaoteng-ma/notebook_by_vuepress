import{_ as s,Y as a,Z as p,$ as t,a0 as n,a1 as e,a4 as c}from"./framework-957baa9a.js";const o={},u=n("h1",{id:"scrapy-命令行入口",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#scrapy-命令行入口","aria-hidden":"true"},"#"),e(" scrapy 命令行入口")],-1),i=c(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scrapy crawl spider_name

<span class="token comment"># 调用scrapy </span>
<span class="token comment"># /bin/scrapy</span>
sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;(-script\\.pyw|\\.exe)?$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># in scrapy/cmdline.py</span>
<span class="token comment"># type(cmd) scrapy.commands.crawl.Command</span>
<span class="token keyword">def</span> <span class="token function">execute</span><span class="token punctuation">(</span>argv<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> settings<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    cmds <span class="token operator">=</span> _get_commands_dict<span class="token punctuation">(</span>settings<span class="token punctuation">,</span> inproject<span class="token punctuation">)</span>
    cmd <span class="token operator">=</span> cmds<span class="token punctuation">[</span>cmdname<span class="token punctuation">]</span>
    cmd<span class="token punctuation">.</span>crawler_process <span class="token operator">=</span> CrawlerProcess<span class="token punctuation">(</span>settings<span class="token punctuation">)</span>
    _run_print_help<span class="token punctuation">(</span>parser<span class="token punctuation">,</span> _run_command<span class="token punctuation">,</span> cmd<span class="token punctuation">,</span> args<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_run_print_help</span><span class="token punctuation">(</span>parser<span class="token punctuation">,</span> func<span class="token punctuation">,</span> <span class="token operator">*</span>a<span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>
    func<span class="token punctuation">(</span><span class="token operator">*</span>a<span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_run_command</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> args<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> opts<span class="token punctuation">.</span>profile<span class="token punctuation">:</span>
        _run_command_profiled<span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> args<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        cmd<span class="token punctuation">.</span>run<span class="token punctuation">(</span>args<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>

<span class="token comment"># cmd.run() -&gt; Command.run()</span>
<span class="token keyword">def</span> Command<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    crawl_defer <span class="token operator">=</span> self<span class="token punctuation">.</span>crawler_process<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>spname<span class="token punctuation">,</span> <span class="token operator">**</span>opts<span class="token punctuation">.</span>spargs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function l(r,d){return a(),p("div",null,[u,t(" more "),i])}const m=s(o,[["render",l],["__file","scrapy_learn_1.html.vue"]]);export{m as default};
