import{_ as p,Y as o,Z as c,a0 as n,a1 as s,a2 as e,a4 as a,E as i}from"./framework-957baa9a.js";const l={},u=n("h1",{id:"_16-editor",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_16-editor","aria-hidden":"true"},"#"),s(" 16 Editor")],-1),r=n("h2",{id:"_1-editor-component-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-editor-component-1","aria-hidden":"true"},"#"),s(" 1. Editor component 1")],-1),d={href:"https://github.com/shelton-xiaoteng-ma/slack/commit/5a199388cd6193944f8642ddb834300da274fae9",target:"_blank",rel:"noopener noreferrer"},k=a('<ol start="0"><li><code>pnpm install quill</code></li><li>quill css <code>src/app/globals.css</code></li><li><code>src/components/editor.tsx</code><ol><li>Quill</li><li>toggleToolbar</li><li><code>const submitRef = useRef(onSubmit);</code></li><li><code>const isEmpty = text.replace(/&lt;(.|\\n)*?&gt;/g, &quot;&quot;).trim().length === 0;</code></li></ol></li></ol><h2 id="_2-editor-emoji" tabindex="-1"><a class="header-anchor" href="#_2-editor-emoji" aria-hidden="true">#</a> 2. Editor emoji</h2>',2),m={href:"https://github.com/shelton-xiaoteng-ma/slack/commit/f19a0898f35cc73b2bd9683975e6d5e6a15e6282",target:"_blank",rel:"noopener noreferrer"},v=a(`<ol start="0"><li><p>packages</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> @emoji-mart/data
<span class="token function">pnpm</span> <span class="token function">add</span> @emoji-mart/react
<span class="token function">pnpm</span> dlx shadcn@latest <span class="token function">add</span> popover
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>EmojiPopoverProps: src/components/emoji-popover.tsx</code></p></li></ol><h2 id="_3-editor-submit" tabindex="-1"><a class="header-anchor" href="#_3-editor-submit" aria-hidden="true">#</a> 3. Editor submit</h2>`,2),b={href:"https://github.com/shelton-xiaoteng-ma/slack/commit/dd21fb3f7fb37dfd30489733d4f6198eeacc27ff",target:"_blank",rel:"noopener noreferrer"},g=a(`<li><p>message table <code>convex/schema.ts convex/messages.ts</code></p></li><li><p>chat-input submit <code>src/app/workspace/[workspaceId]/channel/[channelId]/chat-input.tsx</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/app/workspace/[workspaceId]/channel/[channelId]/chat-input.tsx</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    body<span class="token punctuation">,</span>
    image<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    body<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    image<span class="token operator">:</span> File <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">setIsPending</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">createMessage</span><span class="token punctuation">(</span>
        <span class="token punctuation">{</span> body<span class="token punctuation">,</span> channelId<span class="token punctuation">,</span> workspaceId <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> throwError<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// reset editor</span>
    <span class="token function">setEditorKey</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prevKey<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prevKey <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    toast<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to send message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token function">setIsPending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;px-5 w-full&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Editor
        key<span class="token operator">=</span><span class="token punctuation">{</span>editorKey<span class="token punctuation">}</span>
        placeholder<span class="token operator">=</span><span class="token punctuation">{</span>placeholder<span class="token punctuation">}</span>
        onSubmit<span class="token operator">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span>
        disabled<span class="token operator">=</span><span class="token punctuation">{</span>isPending<span class="token punctuation">}</span>
        innerRef<span class="token operator">=</span><span class="token punctuation">{</span>editorRef<span class="token punctuation">}</span>
    <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>editor submit <code>src/components/editor.tsx</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/components/editor.tsx</span>
<span class="token operator">...</span>
Keyboard<span class="token operator">:</span> <span class="token punctuation">{</span>
      bindings<span class="token operator">:</span> <span class="token punctuation">{</span>
        enter<span class="token operator">:</span> <span class="token punctuation">{</span>
          key<span class="token operator">:</span> <span class="token string">&quot;Enter&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//TODO: Submit form</span>
            <span class="token keyword">const</span> text <span class="token operator">=</span> quill<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> addedImage <span class="token operator">=</span> imageElementRef<span class="token punctuation">.</span>current<span class="token operator">?.</span>files<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> isEmpty <span class="token operator">=</span>
              <span class="token operator">!</span>addedImage <span class="token operator">&amp;&amp;</span>
              quill
                <span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(.|\\n)*?&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>isEmpty<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>quill<span class="token punctuation">.</span><span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            submitRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">{</span> body<span class="token punctuation">,</span> image<span class="token operator">:</span> addedImage <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            quill<span class="token punctuation">.</span><span class="token function">insertText</span><span class="token punctuation">(</span>quill<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?.</span>index <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;as&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,3),h={href:"https://github.com/shelton-xiaoteng-ma/slack/commit/232df0eba67e132c309e211b0acb3a3396f17efd#diff-b7d20d6c6faa8d315b8489797f094d5e425c9ef7fe9d217f93164b6199389f73R19",target:"_blank",rel:"noopener noreferrer"},f=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/features/messages/api/use-create-message.ts</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token operator">?.</span>throwError <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y=a(`<h2 id="_4-image-upload" tabindex="-1"><a class="header-anchor" href="#_4-image-upload" aria-hidden="true">#</a> 4. image upload</h2><ol><li><p><code>generateUploadUrl: convex/upload.ts</code></p></li><li><p><code>useGenerateUploadUrl: src/features/upload/api/use-generate-upload-url.ts</code></p></li><li><p>upload image</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>image<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">generateUploadUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> throwError<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Url not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    method<span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
    headers<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> image<span class="token punctuation">.</span>type <span class="token punctuation">}</span><span class="token punctuation">,</span>
    body<span class="token operator">:</span> image<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to upload image&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> storageId <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> result<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  values<span class="token punctuation">.</span>image <span class="token operator">=</span> storageId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,2);function _(w,x){const t=i("ExternalLinkIcon");return o(),c("div",null,[u,r,n("p",null,[s("github提交记录: "),n("a",d,[s("Editor component 1"),e(t)])]),k,n("p",null,[s("github提交记录: "),n("a",m,[s("Editor emoji"),e(t)])]),v,n("p",null,[s("github提交记录: "),n("a",b,[s("editor submit"),e(t)])]),n("ol",null,[g,n("li",null,[n("p",null,[s("throwError, "),n("a",h,[s("throwError"),e(t)])]),f])]),y])}const E=p(l,[["render",_],["__file","16_editor.html.vue"]]);export{E as default};
