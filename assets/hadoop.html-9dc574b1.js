import{_ as e,Y as d,Z as o,a0 as h,a2 as r,a3 as t,a4 as i,E as s,a1 as c}from"./framework-957baa9a.js";const n={},l=i('<h1 id="hadoop" tabindex="-1"><a class="header-anchor" href="#hadoop" aria-hidden="true">#</a> Hadoop</h1><h2 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍" aria-hidden="true">#</a> 1. 介绍</h2><h3 id="_1-hdfs-安全可靠的分布式文件存储系统" tabindex="-1"><a class="header-anchor" href="#_1-hdfs-安全可靠的分布式文件存储系统" aria-hidden="true">#</a> 1. HDFS 安全可靠的分布式文件存储系统</h3><p>不同于之前靠复制备份</p><p>HDFS也能确保存储的可靠, 避免单个节点硬件故障造成的数据丢失</p><h3 id="_2-mapreduce" tabindex="-1"><a class="header-anchor" href="#_2-mapreduce" aria-hidden="true">#</a> 2. MapReduce</h3><p>关系型数据库受限制, 是因为</p><ol><li>寻址时间的提升远不敌传输速率的提升, 传输取决于硬盘的带宽, 寻址则依赖磁头移动并读写的速度</li><li>如果更新数据较多, 关系数据库的B数效率会低,, 涉及排序合并来重建数据库</li><li>其他不同 <ol><li>mapreduce支持非结构化数据, RDBMS通常要求严格格式</li><li>RDBMS适合点查询和更新, 而mapreduce适合批处理, 一次写入, 多次读取</li></ol></li></ol><h2 id="_2-hadoop-分布式文件系统-hdfs" tabindex="-1"><a class="header-anchor" href="#_2-hadoop-分布式文件系统-hdfs" aria-hidden="true">#</a> 2. Hadoop 分布式文件系统(HDFS)</h2>',9);function p(_,f){const a=s("RouterLink");return d(),o("div",null,[l,h("p",null,[r(a,{to:"/bigdata/hdfs.html"},{default:t(()=>[c("见hdfs")]),_:1})])])}const m=e(n,[["render",p],["__file","hadoop.html.vue"]]);export{m as default};
