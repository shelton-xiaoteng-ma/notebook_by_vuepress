import{_ as e,Y as t,Z as i,a4 as r}from"./framework-957baa9a.js";const n={},a=r('<h1 id="red-hat-openshift" tabindex="-1"><a class="header-anchor" href="#red-hat-openshift" aria-hidden="true">#</a> Red Hat OpenShift</h1><p>Kubernetes and OpenShift are container orchestration platforms.</p><p>OpenShift® is an enterprise-ready Kubernetes container platform built for open hybrid cloud.</p><p>OpenShift runs on a Kubernetes cluster, with object data stored in the etcd key-value store.</p><p>OpenShift is easier to use, integrates with Jenkins, and has more services and features.</p><h2 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> Build</h2><p>Build is the process of transforming inputs into a resultant object.</p><p><code>Build inputs</code>, in order of precedence, include inline Dockerfile definitions, content extracted from existing images, git repositories, binary (or Local) inputs, input secrets, and external artifacts.</p><p>An <code>ImageStream</code> is an abstraction for referencing container images within OpenShift.</p><p>Commonly used <code>Build strategies</code> include Source-to-Image (or S2I), Docker and Custom build strategies.</p><p>You can <code>automate builds</code> using a Webhook, image change, or configuration change trigger.</p><p>Builds require a build configuration file (or <code>BuildConfig</code>), which defines the build strategy and input sources.</p><h2 id="operators" tabindex="-1"><a class="header-anchor" href="#operators" aria-hidden="true">#</a> Operators</h2>',13),o=[a];function s(d,c){return t(),i("div",null,o)}const p=e(n,[["render",s],["__file","openshift.html.vue"]]);export{p as default};
