import{_ as l,Y as o,Z as s,a0 as e,a1 as a,a2 as t,a4 as n,E as r}from"./framework-957baa9a.js";const c={},u=n(`<h1 id="aws-technical-essentials" tabindex="-1"><a class="header-anchor" href="#aws-technical-essentials" aria-hidden="true">#</a> AWS Technical Essentials</h1><p>we will use a hands on example through a cloud-based application that will build over the duration of the course, piece by piece. The app we will build is an employee directory application that stores images and information about fictional employees in a company.</p><h2 id="aws-global-infrastructure" tabindex="-1"><a class="header-anchor" href="#aws-global-infrastructure" aria-hidden="true">#</a> AWS Global Infrastructure</h2><ol><li>services <ol><li>Amazon Elastic Compute Cloud</li><li>AWS container services like Amazon Elastic Container Service</li><li>Service and serverless compute options like AWS Lambda</li></ol></li><li>network networking in AWS, using services like Amazon Virtual Private Cloud and other networking technologies</li><li>storage <ol><li>Amazon S3</li><li>Amazon Elastic Block Store and others</li></ol></li><li>databases <ol><li>Amazon Relational Database Service</li><li>Amazon DynamoDB</li></ol></li><li>monitoring and scaling your application <ol><li>Amazon CloudWatch</li><li>Amazon EC2 Auto Scaling</li><li>Elastic Load Balancing</li></ol></li></ol><h2 id="security-in-the-aws-cloud" tabindex="-1"><a class="header-anchor" href="#security-in-the-aws-cloud" aria-hidden="true">#</a> Security in the AWS Cloud</h2><ol><li>Best Practices for Securing your AWS Account? <ul><li>Securely lock away the credentials associated with the root user and do not use the root user for everyday tasks</li><li>Choose a strong password for the root user</li><li>Disable or delete the access keys associated with the root user.</li><li>Never share your root user password or access keys with anyone</li><li>Enable MFA on root user</li></ul></li></ol><h2 id="aws-identity-and-access-management" tabindex="-1"><a class="header-anchor" href="#aws-identity-and-access-management" aria-hidden="true">#</a> AWS Identity and Access Management</h2><ol><li>Create Admin user</li><li>Create S3DynamoDBFullAccessRole</li></ol><h2 id="aws-compute" tabindex="-1"><a class="header-anchor" href="#aws-compute" aria-hidden="true">#</a> AWS Compute</h2><p>At a fundamental level, there are three types of compute options: virtual machines, container services, and serverless.</p><h3 id="virtual-machines-ec2" tabindex="-1"><a class="header-anchor" href="#virtual-machines-ec2" aria-hidden="true">#</a> Virtual machines(EC2)</h3><ol><li>Architect for High Availability <ul><li>When architecting any application for high availability, consider using at least two EC2 instances in two separate Availability Zones.</li></ul></li><li>Explore the EC2 Instance Lifecycle <ul><li>pending</li><li>running</li><li>reboot(The instance remains on the same host computer and maintains its public and private IP address, and any data on its instance store)</li><li>stop/start(your instance may be placed on a new underlying physical server)</li><li>Stop-Hibernate(When you stop-hibernate your instance, AWS signals the operating system to perform hibernation (suspend-to-disk), which saves the contents from the instance memory (RAM) to the Amazon EBS root volume.)</li><li>terminate</li></ul></li><li>EC2 Pricing Options <ul><li>On-Demand</li><li>Reserve Capacity with Reserved Instances</li><li>Spot Instances</li></ul></li></ol><h3 id="container-services" tabindex="-1"><a class="header-anchor" href="#container-services" aria-hidden="true">#</a> Container services</h3><ol><li>If you’re trying to manage your compute at a large scale, you need to know: <ul><li>How to place your containers on your instances.</li><li>What happens if your container fails.</li><li>What happens if your instance fails.</li><li>How to monitor deployments of your containers.</li></ul></li><li>AWS offers two container orchestration services: Amazon Elastic Container Service (ECS) and Amazon Elastic Kubernetes Service (EKS)</li></ol><h3 id="serverless-and-aws-lambda" tabindex="-1"><a class="header-anchor" href="#serverless-and-aws-lambda" aria-hidden="true">#</a> Serverless and AWS Lambda</h3><p>When running ECS and EKS on EC2, you are still responsible for maintaining the underlying EC2 instances. If you want to deploy your workloads and applications without having to manage any EC2 instances, you can do that on AWS with serverless compute.</p><p>Serverless compute options, including AWS Fargate and AWS Lambda.</p><p>AWS Fargate:</p><pre><code>Amazon ECS and Amazon EKS enable you to run your containers in two modes.
</code></pre><p>AWS Lambda:</p><pre><code>There are three primary components of a Lambda function: the trigger, code, and configuration.

Runtimes such as Python, Node.js, Ruby, Go, Java, .NET Core, or you can implement your Lambda functions to run on a custom runtime.
</code></pre><h3 id="self-reflection" tabindex="-1"><a class="header-anchor" href="#self-reflection" aria-hidden="true">#</a> Self Reflection</h3><p>Question:</p><p>Consider this scenario: You have deployed an Amazon Elastic Compute Cloud (Amazon EC2) instance into a subnet in a virtual private cloud (VPC). This EC2 instance must be accessible from the internet. What steps must you take to enable internet traffic to flow to and from the instance? Assume the following conditions: - The VPC currently doesn’t have any internet gateways attached to it. - The subnet doesn’t have any custom route table associations. - Security groups and network access control lists (network ACLs) don’t have any rules that enable these connections. Write a few sentences that describe the difference between network ACLs and security groups.</p>`,24),d={href:"https://www.tutorialspoint.com/what-are-the-differences-between-security-group-and-network-acl-in-aws#:~:text=The%20Security%20groups%20are%20tied,applied%20to%20the%20outgoing%20rule.",target:"_blank",rel:"noopener noreferrer"},h=n('<ol><li>The Security groups are tied to an instance. Network ACLs are tied to the subnet.</li><li>Any changes applied to an incoming rule will be automatically applied to the outgoing rule in security groups. In network ACL any changes applied to an incoming rule will not be applied to the outgoing rule.</li></ol><h2 id="aws-networking" tabindex="-1"><a class="header-anchor" href="#aws-networking" aria-hidden="true">#</a> AWS networking</h2><p><img src="https://d3c33hcgiwev3.cloudfront.net/imageAssetProxy.v1/69m1UQ52QS6ZtVEOdsEuvg_6d98f06359fd4ce9bd3233180011cf7d_Screen-Shot-2021-01-19-at-1.24.00-PM.png?expiry=1679011200000&amp;hmac=ln6BdXs7cCPikYQXARGkYGDq5nUtMA1MJhZ0WrEgMUs" alt="aws network"></p><ol><li><p>VPC</p><ul><li>A VPC is an isolated network you create in the AWS cloud, similar to a traditional network in a data center.</li><li>VPC cross multiple availability zones</li></ul></li><li><p>Subnet</p><ul><li>Think of subnets as smaller networks inside your base network</li><li>High Availability with A VPC, create at least two subnets configured in two different Availability Zones.</li></ul></li><li><p>Gateways</p><ol><li>Internet Gateway an internet gateway attach to VPC, Unlike your modem at home, which sometimes goes down or offline, an internet gateway is highly available and scalable</li><li>Virtual Private Gateway A virtual private gateway allows you to connect your AWS VPC to another private network.</li></ol></li><li><p>VPC Routing</p><ol><li>Make sure the internet traffic enter the Internet Gateway and find the right subnet. Through <code>route tables</code>. <ul><li>main route table, applies it to the entire VPC, default allow traffic between all subnets local to the VPC. Created by default when the VPC is created.</li><li>sub route table, associate to subnet</li></ul></li><li>create route table, and associate it with a subnet <ul><li>app-route-table-public, add route, destination: 0.0.0.0/0 target: igw-0bd77194e63618908(internet gateway from internet)</li><li>associate public subnet: click subnet associate tab.</li></ul></li></ol></li><li><p>network ACLs</p><ul><li>Think of a network ACL as a firewall at the subnet level.</li><li>Everything is allowed by default</li></ul></li><li><p>security group</p><ul><li>for EC2 instance</li><li>Everything is blocked by default</li></ul></li><li><p>Secure VPC resources(filter network-wild traffic)</p><ul><li>network access control lists(network ACLs)</li><li>security group</li></ul></li></ol><h3 id="exam" tabindex="-1"><a class="header-anchor" href="#exam" aria-hidden="true">#</a> Exam</h3><ol><li>Discover how AWS compute services differ from other AWS services <ul><li>AWS compute services, there are three types of compute options: virtual machines, container services, and serverless.</li></ul></li><li>Discover the basic components of EC2 architecture <ul><li>Instance type(CPU, SSD, RAM)</li><li>AMI(os)</li><li>Network(VPC, subnet, security group, internet gateway, route table, ACLs)</li></ul></li><li>Differentiate between a container and a virtual machine <ul><li>Containers share the same operating system and kernel as the host they exist on, whereas virtual machines contain their operating system. Since each virtual machine has to maintain a copy of an operating system, there’s a degree of wasted space.</li><li>A container is more lightweight. virtual machines offer you the full strength of an operating system and offer more resources, like package installation, a dedicated kernel, and more.</li></ul></li><li>Discover the features and advantages of using serverless technologies <ul><li>No servers to provision or manage.</li><li>Scales with usage.</li><li>You never pay for idle resources.</li><li>Availability and fault tolerance are built-in.</li></ul></li><li>Define basic networking concepts <ul><li>Networking is how you connect computers around the world and allow them to communicate with one another.</li></ul></li><li>Explain the features of Amazon Virtual Private Cloud (VPC) <ul><li>CIDR(Classless Inter-Domain Routing notation), 192.168.1.0/16(16fixed bits), 192.168.1.0/16 in range(192.168.0.0, 192.168.255.255)</li><li>VPC, Internet Gateway, subnet, security group, route table, ACLs</li></ul></li><li>Create a VPC</li></ol><p>Quiz: 13524 33312 32422 1214</p><h2 id="storage-on-aws" tabindex="-1"><a class="header-anchor" href="#storage-on-aws" aria-hidden="true">#</a> Storage on AWS</h2><p>AWS storage services are grouped into three different categories: block storage, file storage, and object storage.</p><ol><li>Common use cases for <strong>file storage</strong> include: <ul><li>Large content repositories</li><li>Development environments</li><li>User home directories</li></ul></li><li><strong>Block Storage</strong><ul><li>Since block storage is optimized for low-latency operations, it is a typical storage choice for high-performance enterprise workloads, such as <code>databases</code> or enterprise resource planning (ERP) systems, that require <code>low-latency</code> storage.</li></ul></li><li><strong>object storage</strong><ul><li>Object storage is generally useful when storing large data sets, unstructured files like media assets, and static assets, such as photos.</li></ul></li></ol><h3 id="block-storage" tabindex="-1"><a class="header-anchor" href="#block-storage" aria-hidden="true">#</a> Block Storage</h3><p>Amazon EC2 Instance Store</p><ul><li>for temporary storage of information that is constantly changing</li></ul><p>Amazon Elastic Block Storage (Amazon EBS)</p><ul><li>Scale Amazon EBS Volumes, Increase the volume size to 16TB, or attach multiple volumes to a single EC2 instance.</li><li>Amazon EBS Use Cases: Operating systems, Databases, Enterprise applications, Throughput-intensive applications</li><li>Benefits of Using Amazon EBS: High availability, Data persistence, Data encryption, Flexibility(support on-the-fly changes), Backups.</li><li>EBS Snapshots: incremental backups using Amazon S3, create multiple new volumes.</li></ul><h3 id="object-storage-with-amazon-s3" tabindex="-1"><a class="header-anchor" href="#object-storage-with-amazon-s3" aria-hidden="true">#</a> Object Storage with Amazon S3</h3><p>Benefits:</p><ul><li>It enables you to retrieve your data from anywhere on the web.</li></ul><p>Access management</p><ol><li>Everything in Amazon S3 is private by default.</li><li>IAM policies <ul><li>for users, accounts, roles</li><li>for object/folds/bucket</li></ul></li><li>S3 bucket policies <ul><li>S3 Bucket policies can only be placed on buckets</li></ul></li></ol><p>Encrypt S3</p><p>Use Versioning to Preserve Objects</p>',22),p={href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html",target:"_blank",rel:"noopener noreferrer"},m=e("ul",null,[e("li",null,"Amazon S3 Standard"),e("li",null,"Amazon S3 Intelligent-Tiering"),e("li",null,"Amazon S3 Standard-Infrequent Access (S3 Standard-IA)"),e("li",null,"Amazon S3 One Zone-Infrequent Access (S3 One Zone-IA)"),e("li",null,"Amazon S3 Glacier"),e("li",null,"Amazon S3 Glacier Deep Archive")],-1),g={href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html",target:"_blank",rel:"noopener noreferrer"},f=n('<h3 id="amazon-elastic-file-system-amazon-efs-and-amazon-fsx" tabindex="-1"><a class="header-anchor" href="#amazon-elastic-file-system-amazon-efs-and-amazon-fsx" aria-hidden="true">#</a> Amazon Elastic File System (Amazon EFS) and Amazon FSx</h3><ul><li>Fully managed NFS file system.</li><li>It is file storage.</li><li>You pay for what you use (you don’t have to provision storage in advance).</li><li>Amazon EFS and Amazon FSx can be mounted onto multiple EC2 instances.</li></ul><h2 id="databases-on-aws" tabindex="-1"><a class="header-anchor" href="#databases-on-aws" aria-hidden="true">#</a> Databases on AWS</h2><h3 id="rds" tabindex="-1"><a class="header-anchor" href="#rds" aria-hidden="true">#</a> RDS</h3><ul><li>Commercial: Oracle, SQL Server</li><li>Open Source: MySQL, PostgreSQL, MariaDB</li><li>Cloud Native: Amazon Aurora</li></ul><p>Back Up Your Data: Automatic Backups(35 days), Manual Snapshots(EBS snapshots)</p><p>Get Redundancy with Amazon RDS Multi-AZ</p><h3 id="dynamodb" tabindex="-1"><a class="header-anchor" href="#dynamodb" aria-hidden="true">#</a> DynamoDB</h3><p>Benefits:</p><ul><li>fully managed NoSQL database</li><li>seamless scalability</li><li>can store and retrieve any amount of data and serve any level of request traffic</li><li>providing built-in high availability and data durability</li></ul><p>A <code>table</code> is a collection of items, and each <code>item</code> is a collection of <code>attributes</code>. DynamoDB uses <code>primary keys</code> to uniquely identify each item in a table and secondary indexes to provide more querying flexibility.</p><h3 id="choose-the-right-aws-database-service" tabindex="-1"><a class="header-anchor" href="#choose-the-right-aws-database-service" aria-hidden="true">#</a> Choose the Right AWS Database Service</h3><p>Quiz</p><p>24222 132(14)2 (34)3135</p><h2 id="monitoring-on-aws" tabindex="-1"><a class="header-anchor" href="#monitoring-on-aws" aria-hidden="true">#</a> Monitoring on AWS</h2><p>The act of <code>collecting</code>, <code>analyzing</code>, and using data to <code>make decisions</code> or <code>answer questions</code> about your IT resources and systems is called monitoring.</p><p>Benefits:</p><ul><li>Respond to operational issues proactively before your end users are aware of them.</li><li>Improve the performance and reliability of your resources.</li><li>Recognize security threats and events.</li><li>Make data-driven decisions for your business.</li><li>Create more cost-effective solutions.</li></ul><p>Metrics: Break Down Metrics, Set Up Custom Metrics(using the PutMetricData API)</p><p>Logs Collection: The CloudWatch Logs agent enables Amazon EC2 instances to automatically send log data to CloudWatch Logs.</p><p>Configure a CloudWatch Alarm: metric, threshold, the specified time period, action(EC2 instance to reboot, Auto Scaling, SNS, AWS Lambda function),</p><h2 id="optimization" tabindex="-1"><a class="header-anchor" href="#optimization" aria-hidden="true">#</a> Optimization</h2><p>Availability</p><ul><li>Use a Second Availability Zone</li><li>Create a Process for Replication</li><li>Address Customer Redirection</li><li>Understand the Types of High Availability: Active-Passive for stateful applications, Active-Active for stateless applications, work better for scalability.</li></ul><h3 id="elastic-load-balancing" tabindex="-1"><a class="header-anchor" href="#elastic-load-balancing" aria-hidden="true">#</a> Elastic Load Balancing</h3><p>Features of ELB:</p><ul><li>distribute incoming application traffic across EC2 instances as well as containers, IP addresses, and AWS Lambda functions.</li><li>ELB can load balance to IP addresses means that it can work in a hybrid mode as well, where it also load balances to on-premises servers.</li><li>ELB is highly available.</li><li>ELB automatically scales to meet the demand of the incoming traffic.</li></ul><p>Health Checks</p><ul><li>monitor page, health check should validate all of those elements(instance, s3, database...).</li><li>After determining the availability of a new EC2 instance, the load balancer starts sending traffic to it. <ul><li>If ELB determines that an EC2 instance is no longer working, it stops sending traffic to it and lets EC2 Auto Scaling know.</li><li>EC2 Auto Scaling’s responsibility is to remove it from the group and replace it with a new EC2 instance. Traffic only sends to the new instance if it passes the health check.</li></ul></li><li>In the case of a scale down action that EC2 Auto Scaling needs to take due to a scaling policy, it lets ELB know that EC2 instances will be terminated. <ul><li>ELB can prevent EC2 Auto Scaling terminating the EC2 instance until all connections to that instance end, while preventing any new connections.</li></ul></li></ul><p>ELB Components:</p><ul><li>Listeners</li><li>Target groups, a health check needs to be defined for each target group.</li><li>Rules</li></ul><ol><li>Application Load Balancer <ul><li>ALB routes traffic based on request data.</li><li>Send responses directly to the client.(It also has the ability to send a redirect to the client)</li><li>ALB supports TLS offloading.</li><li>Authenticate users (ALB uses the OpenID Connect protocol, SAML, LDAP, Microsoft AD, and more)</li><li>Secure traffic.(IP address ranges)</li><li>ALB uses the round-robin routing algorithm.</li><li>ALB uses the least outstanding request routing algorithm.</li><li>ALB has sticky sessions.</li><li>ALB is specifically for HTTP and HTTPS traffic.</li></ul></li><li>Network Load Balancer <ul><li>Network Load Balancer supports TCP, UDP, and TLS protocols. authentication, and least outstanding request routing algorithm, are not available with NLB.</li><li>NLB uses a flow hash routing algorithm.</li><li>NLB has sticky sessions.(based on the source IP address of the client )</li><li>NLB supports TLS offloading.</li><li>NLB handles millions of requests per second.</li><li>NLB supports static and elastic IP addresses.</li><li>NLB preserves source IP address.</li></ul></li></ol><h3 id="amazon-ec2-auto-scaling" tabindex="-1"><a class="header-anchor" href="#amazon-ec2-auto-scaling" aria-hidden="true">#</a> Amazon EC2 Auto Scaling</h3><p>Integrate ELB with EC2 Auto Scaling, ELB supports two types of health checks.</p><ul><li>Establishing a connection to a backend EC2 instance using TCP</li><li>Making an HTTP or HTTPS request to a webpage that you specify, and validating that an HTTP response code is returned.</li></ul><p>Components:</p><ul><li>Launch template or configuration: What resource should be automatically scaled?</li><li>EC2 Auto Scaling Group: Where should the resources be deployed?</li><li>Scaling policies: When should the resources be added or removed? <ul><li>There are three types of scaling policies: simple, step, and target tracking scaling.</li></ul></li></ul><h2 id="capstone-project" tabindex="-1"><a class="header-anchor" href="#capstone-project" aria-hidden="true">#</a> Capstone Project</h2><p>Scenario: You have a web application that accepts requests from the internet. Clients can send requests to query for data. When a request comes in, the web application queries a MySQL database and returns the data to the client.</p><ol><li>Network layer <ul><li>Select Region</li><li>create VPC(my-vpc), subnet(Private Subnet 1/2, Public Subnet 1/2) in my-vpc</li><li>create Route table(public-route-table, private-route-table 默认vpc, )</li><li>create Internet gateway(my-igw), attach to my-vpc.</li><li>create security group</li></ul></li><li>Computer layer <ul><li>create ALB(Application load balance), vpc(my-vpc, mapping to public subnets)</li><li>create Launch configurations/EC2 Auto Scaling Group</li><li>set up health check(Establishing a connection use tcp, Making an HTTP or HTTPS request to a webpage)</li></ul></li><li>datastore layer <ul><li>create mysql instances in private subnet</li></ul></li><li>other <ul><li>ec2 in public subnet, with two available zones</li><li>mysql instances in private subnet, with two available zones</li></ul></li><li>explation <ul><li>client &lt;-&gt; internet gateway &lt;-&gt; VPC &lt;-&gt; ALB &lt;-&gt; pubsubnet &lt;-&gt; ec2/other &lt;-&gt; private subnet &lt;-&gt; rds, then backtrack</li></ul></li></ol>',40);function b(y,w){const i=r("ExternalLinkIcon");return o(),s("div",null,[u,e("p",null,[a("Answer:"),e("a",d,[a("differences between Security Group and Network ACL"),t(i)])]),h,e("p",null,[e("a",p,[a("Amazon S3 Storage Classes"),t(i)])]),m,e("p",null,[e("a",g,[a("Automate Tier Transitions with Object Lifecycle Management"),t(i)])]),f])}const S=l(c,[["render",b],["__file","aws_technical_essential.html.vue"]]);export{S as default};
