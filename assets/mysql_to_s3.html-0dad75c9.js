import{_ as n,Y as s,Z as a,a4 as t}from"./framework-957baa9a.js";const p={},o=t(`<h1 id="记录mysql迁移aws" tabindex="-1"><a class="header-anchor" href="#记录mysql迁移aws" aria-hidden="true">#</a> 记录mysql迁移aws</h1><ol><li><p>schema 同步问题</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">create_schema_by_mysql_info</span><span class="token punctuation">(</span>msyql_schema<span class="token punctuation">:</span> pyspark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>dataframe<span class="token punctuation">.</span>DataFrame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;依据mysql information_schema.columns 创建 pyspark.sql.types.StructType
    msyql_schema: DateFrame 
        select column_name, ordinal_position, data_type, column_type from information_schema.columns

    return: str
    &quot;&quot;&quot;</span>
    schema_json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;struct&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fields&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
    spark_mysql_map <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;decimal&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;decimal&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;string&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;varchar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;datetime&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;date&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;double&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;double&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;integer&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;int&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bigint&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tinyint&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> column <span class="token keyword">in</span> msyql_schema<span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> column<span class="token punctuation">[</span><span class="token string">&quot;data_type&quot;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;varchar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;datetime&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;date&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            field_type <span class="token operator">=</span> <span class="token string">&quot;string&quot;</span>
        <span class="token keyword">elif</span> column<span class="token punctuation">[</span><span class="token string">&quot;data_type&quot;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;int&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bigint&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tinyint&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            field_type <span class="token operator">=</span> <span class="token string">&quot;integer&quot;</span>
        <span class="token keyword">elif</span> column<span class="token punctuation">[</span><span class="token string">&quot;data_type&quot;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;double&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            field_type <span class="token operator">=</span> <span class="token string">&quot;double&quot;</span>
        <span class="token keyword">elif</span> column<span class="token punctuation">[</span><span class="token string">&quot;data_type&quot;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;decimal&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            field_type <span class="token operator">=</span> column<span class="token punctuation">[</span><span class="token string">&quot;column_type&quot;</span><span class="token punctuation">]</span>
        field <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> column<span class="token punctuation">[</span><span class="token string">&quot;column_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> field_type<span class="token punctuation">,</span>
            <span class="token string">&quot;nullable&quot;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
            <span class="token string">&quot;metadata&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        schema_json<span class="token punctuation">[</span><span class="token string">&quot;fields&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>field<span class="token punctuation">)</span>
    <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>schema_json<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,2),e=[o];function u(c,i){return s(),a("div",null,e)}const k=n(p,[["render",u],["__file","mysql_to_s3.html.vue"]]);export{k as default};
