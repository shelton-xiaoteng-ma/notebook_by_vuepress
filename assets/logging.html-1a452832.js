import{_ as a,Y as t,Z as p,a0 as n,a1 as o,a2 as e,a4 as i,E as l}from"./framework-957baa9a.js";const c={},u=i(`<h1 id="python-logging" tabindex="-1"><a class="header-anchor" href="#python-logging" aria-hidden="true">#</a> python logging</h1><p>logging可以发送到控制台, 文件, 网络</p><h2 id="_1-等级" tabindex="-1"><a class="header-anchor" href="#_1-等级" aria-hidden="true">#</a> 1. 等级</h2><ul><li>a. logging.CRITICAL</li><li>b. logging.ERROR</li><li>c. logging.WARNING</li><li>d. logging.INFO</li><li>e. logging.DEBUG</li></ul><h2 id="_2-实践" tabindex="-1"><a class="header-anchor" href="#_2-实践" aria-hidden="true">#</a> 2. 实践</h2><ol><li><p>使用<code>__name__</code>作为logger的名称</p><ul><li>便于知道日志来自哪个模块</li></ul></li><li><p>异常捕捉时使用<code>traceback</code>记录</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>  logger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&#39;Failed to open file&#39;</span><span class="token punctuation">,</span> exc_info<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>   
  logger<span class="token punctuation">.</span>exception<span class="token punctuation">(</span><span class="token string">&#39;Failed to open file&#39;</span><span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>不要在模块层次创建logger 因为在模块层面获得的logger，在加载了配置文件后都将失效<br> 而应该在使用时获得</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token keyword">import</span> logging
    
    <span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;Hi, foo&#39;</span><span class="token punctuation">)</span>
    
    <span class="token keyword">class</span> <span class="token class-name">Bar</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> logger<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>logger <span class="token operator">=</span> logger <span class="token keyword">or</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
    
        <span class="token keyword">def</span> <span class="token function">bar</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;Hi, bar&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用json或YAML记录配置</p><ol><li><p>logging.json</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token punctuation">{</span>
        <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">&quot;disable_existing_loggers&quot;</span><span class="token punctuation">:</span> false<span class="token punctuation">,</span>  <span class="token comment"># 如果为True,则模块层面获取的logger都失效</span>
        <span class="token string">&quot;formatters&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;simple&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;format&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;%(asctime)s - %(name)s - %(levelname)s - %(message)s&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
        <span class="token string">&quot;handlers&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;console&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;class&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;logging.StreamHandler&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;DEBUG&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;formatter&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;simple&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;stream&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ext://sys.stdout&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
            <span class="token string">&quot;info_file_handler&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;class&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;logging.handlers.RotatingFileHandler&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;INFO&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;formatter&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;simple&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;filename&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;info.log&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;maxBytes&quot;</span><span class="token punctuation">:</span> <span class="token number">10485760</span><span class="token punctuation">,</span>
                <span class="token string">&quot;backupCount&quot;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
                <span class="token string">&quot;encoding&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utf8&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
            <span class="token string">&quot;error_file_handler&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;class&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;logging.handlers.RotatingFileHandler&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;formatter&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;simple&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;filename&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;errors.log&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;maxBytes&quot;</span><span class="token punctuation">:</span> <span class="token number">10485760</span><span class="token punctuation">,</span>
                <span class="token string">&quot;backupCount&quot;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
                <span class="token string">&quot;encoding&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utf8&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
        <span class="token string">&quot;loggers&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;my_module&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;handlers&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;console&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string">&quot;propagate&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;no&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
        <span class="token string">&quot;root&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;INFO&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;handlers&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;console&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;info_file_handler&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;error_file_handler&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>读取json配置</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token keyword">import</span> json
    <span class="token keyword">import</span> logging<span class="token punctuation">.</span>config
    
    <span class="token keyword">def</span> <span class="token function">setup_logging</span><span class="token punctuation">(</span>
        default_path<span class="token operator">=</span><span class="token string">&#39;logging.json&#39;</span><span class="token punctuation">,</span> 
        default_level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span>
        env_key<span class="token operator">=</span><span class="token string">&#39;LOG_CFG&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;Setup logging configuration
    
        &quot;&quot;&quot;</span>
        path <span class="token operator">=</span> default_path
        value <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span>env_key<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> value<span class="token punctuation">:</span>
            path <span class="token operator">=</span> value
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&#39;rt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                config <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
            logging<span class="token punctuation">.</span>config<span class="token punctuation">.</span>dictConfig<span class="token punctuation">(</span>config<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>level<span class="token operator">=</span>default_level<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li></ol><h2 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置" aria-hidden="true">#</a> 2. 配置</h2><ol><li><p>基础配置</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

logFilename <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;../log/ele.log&#39;</span><span class="token punctuation">)</span>

log_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>logFilename<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>log_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>log_dir<span class="token punctuation">)</span>
logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>
    level <span class="token operator">=</span> logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">,</span>  <span class="token comment"># 定义输出到文件的log级别，</span>
    <span class="token builtin">format</span> <span class="token operator">=</span> <span class="token string">&#39;%(asctime)s  %(filename)s : %(levelname)s  %(message)s&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 定义输出log的格式</span>
    datefmt<span class="token operator">=</span> <span class="token string">&#39;%Y-%m-%d %A %H:%M:%S&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 时间</span>
    filename <span class="token operator">=</span> logFilename<span class="token punctuation">,</span>  <span class="token comment"># log文件名</span>
    filemode <span class="token operator">=</span> <span class="token string">&#39;w&#39;</span>
<span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>日志是线程安全的，但是多进程会有问题，通常解决思路：</p><ol><li>每个进程单独写一个文件</li><li>使用socketHandler，启一个线程或进程单独处理</li><li>多进程mulitprocessing中的Queue队列存储日志，单独一个进程处理</li></ol></li></ol><h2 id="_3-遇到的bug" tabindex="-1"><a class="header-anchor" href="#_3-遇到的bug" aria-hidden="true">#</a> 3. 遇到的bug</h2>`,9),r={href:"https://mozillazg.com/2016/09/python-threading-multiprocessing-logging-equal-deadlock.html",target:"_blank",rel:"noopener noreferrer"},d=n("ol",null,[n("li",null,"主要问题是创建子进程时, 如果使用multiprocessing, 会fork父进程的所有的状态, 此时如果某个线程正在写日志, logging的锁将被fork到子进程中, 导致子进程logging锁无法释,产生死锁"),n("li",null,"解决办法: 使用subprocess, 或只使用多进程+logging")],-1);function k(g,v){const s=l("ExternalLinkIcon");return t(),p("div",null,[u,n("ol",null,[n("li",null,[n("a",r,[o("多进程+ 多线程 + logging遇到的问题"),e(s)]),d])])])}const b=a(c,[["render",k],["__file","logging.html.vue"]]);export{b as default};
