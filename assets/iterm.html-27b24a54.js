import{_ as t,Y as l,Z as i,a0 as n,a1 as a,a2 as o,a4 as s,E as p}from"./framework-957baa9a.js";const c={},r=s('<h1 id="iterm2" tabindex="-1"><a class="header-anchor" href="#iterm2" aria-hidden="true">#</a> iterm2</h1><p>mac下使用iterm作为终端模拟工具</p><h2 id="_1-iterm快捷键" tabindex="-1"><a class="header-anchor" href="#_1-iterm快捷键" aria-hidden="true">#</a> 1. Iterm快捷键</h2><ol><li>Command + d # 垂直分屏</li><li>Command + shift + d # 水平分屏</li><li>Command + ] /[ # 最近使用的分屏切换</li><li>Command + opthon + 方向键 # 切换到指定的分屏</li><li>Command + 数字/方向键 # 切换标签页</li><li>shift + Command + s # 保存当前窗口快照</li><li>Command + option + b # 快照回放</li><li>ctrl + u # 删除整行</li><li>ctrl + w # 删除前一个单词</li><li>ctrl + c # 直接下一行重新输入</li><li>Command + shift + i # 多窗口同步输入</li></ol><h2 id="_2-使用mac进行ssh登陆linux服务器" tabindex="-1"><a class="header-anchor" href="#_2-使用mac进行ssh登陆linux服务器" aria-hidden="true">#</a> 2. 使用mac进行ssh登陆linux服务器</h2>',5),d=s(`<li><p>直接命令行操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token function">ssh</span> xiaoteng@11.11.1.1
    <span class="token comment"># password ..即可</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),m={href:"https://blog.csdn.net/Eden_M516/article/details/73741290",target:"_blank",rel:"noopener noreferrer"},u=s(`<ol><li><p>编写expect脚本，<code>vi ～/.ssh/profile1</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token comment">#!/usr/bin/expect -f</span>
    <span class="token builtin class-name">set</span> user <span class="token operator">&lt;</span>用户名<span class="token operator">&gt;</span>
    <span class="token builtin class-name">set</span> <span class="token function">host</span> <span class="token operator">&lt;</span>ip地址<span class="token operator">&gt;</span>
    <span class="token builtin class-name">set</span> password <span class="token operator">&lt;</span>密码<span class="token operator">&gt;</span>
    <span class="token builtin class-name">set</span> <span class="token function">timeout</span> <span class="token parameter variable">-1</span>

    spawn <span class="token function">ssh</span> <span class="token variable">$user</span>@<span class="token variable">$host</span>
    <span class="token function">expect</span> <span class="token string">&quot;*assword:*&quot;</span>
    send <span class="token string">&quot;<span class="token variable">$password</span><span class="token entity" title="\\r">\\r</span>&quot;</span>
    interact
    <span class="token function">expect</span> eof
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>iterm2 preference profiles new 填写name(profile1), command(expect ~/.ssh/profile1)</p></li><li><p>启动iterm时选择profile1的名字即可</p></li></ol>`,1),v=s(`<li><p>通过<code>.zshrc</code>的alias快捷登录</p><ol><li><p>配置快捷登录命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token builtin class-name">alias</span> <span class="token assign-left variable">ssh_1</span><span class="token operator">=</span><span class="token string">&quot;ssh user@host&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;ssh_1: for user&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>密码管理器设置密码</p><ul><li>Window -&gt; Password Manager -&gt; + -&gt; account Name + passowrd</li></ul></li><li><p>配置trigger, 自动输入密码</p><ul><li>preference -&gt; profiles - default -&gt; Advanced -&gt; triggers</li><li>(regular express: xxx&#39;s password, action: open password manager, parameters: user, Instant, Enable)</li></ul></li><li><p>使用: 登录终端后根据提示, 自动补全ssh登录命令, trigger识别到输入密码的提示时, 自动输入密码</p></li></ol></li>`,1),b=s(`<h2 id="_3-设置" tabindex="-1"><a class="header-anchor" href="#_3-设置" aria-hidden="true">#</a> 3. 设置</h2><ol><li><p>代理设置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>socks5://127.0.0.1:1080 <span class="token comment"># 配置http 代理访问</span>
 <span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span>socks5://127.0.0.1:1080 <span class="token comment"># 配置https 代理访问</span>
 <span class="token builtin class-name">export</span> <span class="token assign-left variable">all_proxy</span><span class="token operator">=</span>socks5://127.0.0.1:1080 <span class="token comment"># 配置http和https访问</span>
 <span class="token builtin class-name">unset</span> http_proxy  <span class="token comment"># 取消http 代理访问</span>
 <span class="token builtin class-name">unset</span> https_proxy <span class="token comment"># 取消https 代理访问</span>

 <span class="token comment"># 简易化设置proxy</span>
 <span class="token builtin class-name">alias</span> <span class="token assign-left variable">proxy_charls</span><span class="token operator">=</span><span class="token string">&#39;export http_proxy=http://127.0.0.1:8888 https_proxy=http://127.0.0.1:8888&#39;</span>
 <span class="token builtin class-name">alias</span> <span class="token assign-left variable">proxy_mitmproxy</span><span class="token operator">=</span><span class="token string">&#39;export http_proxy=http://127.0.0.1:8080 https_proxy=http://127.0.0.1:8080&#39;</span>
 <span class="token builtin class-name">alias</span> <span class="token assign-left variable">proxy_system</span><span class="token operator">=</span><span class="token string">&#39;export http_proxy=http://127.0.0.1:7890 https_proxy=http://127.0.0.1:7890&#39;</span>
 <span class="token builtin class-name">alias</span> <span class="token assign-left variable">unproxy</span><span class="token operator">=</span><span class="token string">&#39;unset http_proxy https_proxy&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>zshrc配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># ~/.zshrc</span>

<span class="token comment"># If you come from bash you might have to change your $PATH.</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/bin:/usr/local/bin:<span class="token environment constant">$PATH</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/go/bin
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$PATH</span>:<span class="token variable"><span class="token variable">$(</span>go <span class="token function">env</span> GOPATH<span class="token variable">)</span></span>/bin&quot;</span>
<span class="token comment"># Path to your oh-my-zsh installation.</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">ZSH</span><span class="token operator">=</span><span class="token string">&quot;/Users/maxiaoteng/.oh-my-zsh&quot;</span>
<span class="token comment"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span>
<span class="token comment"># load a random theme each time oh-my-zsh is loaded, in which case,</span>
<span class="token comment"># to know which specific one was loaded, run: echo $RANDOM_THEME</span>
<span class="token comment"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span>
<span class="token assign-left variable">ZSH_THEME</span><span class="token operator">=</span><span class="token string">&quot;robbyrussell&quot;</span>
<span class="token comment"># Which plugins would you like to load?</span>
<span class="token comment"># Standard plugins can be found in $ZSH/plugins/</span>
<span class="token comment"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span>
<span class="token comment"># Example format: plugins=(rails git textmate ruby lighthouse)</span>
<span class="token comment"># Add wisely, as too many plugins slow down shell startup.</span>
<span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>git zsh-syntax-highlighting zsh-autosuggestions zsh-completions<span class="token punctuation">)</span>

<span class="token builtin class-name">source</span> <span class="token variable">$ZSH</span>/oh-my-zsh.sh

<span class="token comment"># Example aliases</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">zshconfig</span><span class="token operator">=</span><span class="token string">&quot;mate ~/.zshrc&quot;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ohmyzsh</span><span class="token operator">=</span><span class="token string">&quot;mate ~/.oh-my-zsh&quot;</span>
<span class="token comment"># proxy</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">proxy_charles</span><span class="token operator">=</span><span class="token string">&#39;export http_proxy=http://127.0.0.1:8888 https_proxy=http://127.0.0.1:8888&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">proxy_mitmproxy</span><span class="token operator">=</span><span class="token string">&#39;export http_proxy=http://127.0.0.1:8080 https_proxy=http://127.0.0.1:8080&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">proxy_system</span><span class="token operator">=</span><span class="token string">&#39;export http_proxy=http://127.0.0.1:7890 https_proxy=http://127.0.0.1:7890&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">unproxy</span><span class="token operator">=</span><span class="token string">&#39;unset http_proxy https_proxy&#39;</span>
<span class="token comment"># brew</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">abrew</span><span class="token operator">=</span><span class="token string">&quot;/opt/homebrew/bin/brew&quot;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ibrew</span><span class="token operator">=</span><span class="token string">&quot;arch -x86_64 /usr/local/bin/brew&quot;</span>
<span class="token comment"># venv</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">venv</span><span class="token operator">=</span><span class="token string">&quot;source ~/projects/xiaoteng_venv/bin/activate&quot;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">adev</span><span class="token operator">=</span><span class="token string">&quot;source ~/projects/venvs/venv_aws/bin/activate&quot;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">udev</span><span class="token operator">=</span><span class="token string">&quot;source ~/projects/venvs/venv_dev/bin/activate&quot;</span>
<span class="token comment"># POWERLINE_PATH=&quot;short&quot;</span>

<span class="token comment"># python3 虚拟环境</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">uscrapy</span><span class="token operator">=</span><span class="token string">&quot;/Users/maxiaoteng/projects/venvs/venv_dev/bin/scrapy&quot;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ascrapy</span><span class="token operator">=</span><span class="token string">&quot;/Users/maxiaoteng/projects/venvs/venv_aws/bin/scrapy&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;请选择虚拟环境:&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;udev: venv for ucloud&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;adev: venv for aws&quot;</span>

<span class="token comment"># connect ssh</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ssh_1</span><span class="token operator">=</span><span class="token string">&quot;ssh user@ip&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;ssh_1: ssh for qissh_1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,2);function k(h,g){const e=p("ExternalLinkIcon");return l(),i("div",null,[r,n("ol",null,[d,n("li",null,[n("p",null,[a("配置profile实现一键登录 "),n("a",m,[a("https://blog.csdn.net/Eden_M516/article/details/73741290"),o(e)])]),u]),v]),b])}const _=t(c,[["render",k],["__file","iterm.html.vue"]]);export{_ as default};
