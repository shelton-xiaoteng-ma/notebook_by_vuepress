import{_ as n,Y as s,Z as a,a4 as t}from"./framework-957baa9a.js";const p={},o=t(`<h1 id="_11-workspace-preference" tabindex="-1"><a class="header-anchor" href="#_11-workspace-preference" aria-hidden="true">#</a> 11 workspace Preference</h1><ol><li><p>api update/remove</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// convex/workspaces.ts</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token function">mutation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  args<span class="token operator">:</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> v<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;workspaces&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> v<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> userId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAuthUserId</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unauthorized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> member <span class="token operator">=</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span>db
        <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&quot;members&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withIndex</span><span class="token punctuation">(</span><span class="token string">&quot;by_workspace_id_user_id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          q<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;workspaceId&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>member <span class="token operator">||</span> member<span class="token punctuation">.</span>role <span class="token operator">!==</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unauthorized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">await</span> ctx<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> args<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> args<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> remove <span class="token operator">=</span> <span class="token function">mutation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  args<span class="token operator">:</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> v<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;workspaces&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> userId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAuthUserId</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unauthorized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> member <span class="token operator">=</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span>db
        <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&quot;members&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withIndex</span><span class="token punctuation">(</span><span class="token string">&quot;by_workspace_id_user_id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          q<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;workspaceId&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>member <span class="token operator">||</span> member<span class="token punctuation">.</span>role <span class="token operator">!==</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unauthorized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> <span class="token punctuation">[</span>members<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        ctx<span class="token punctuation">.</span>db
          <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&quot;members&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">withIndex</span><span class="token punctuation">(</span><span class="token string">&quot;by_workspace_id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> q<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;workspaceId&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> member <span class="token keyword">of</span> members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> ctx<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>member<span class="token punctuation">.</span>_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">await</span> ctx<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> args<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>preference modal</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/app/workspace/[workspaceId]/preference-modal.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/ui/button&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  Dialog<span class="token punctuation">,</span>
  DialogClose<span class="token punctuation">,</span>
  DialogContent<span class="token punctuation">,</span>
  DialogFooter<span class="token punctuation">,</span>
  DialogHeader<span class="token punctuation">,</span>
  DialogTitle<span class="token punctuation">,</span>
  DialogTrigger<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/ui/dialog&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Input <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/ui/input&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRemoveWorkspace <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/features/workspaces/api/use-remove-workspace&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useUpdateWorkspace <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/features/workspaces/api/use-update-workspace&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UseConfirm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/hooks/use-confirm&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useWorkspaceId <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/hooks/use-workspace-id&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TrashIcon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;lucide-react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/navigation&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;sonner&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">PreferenceModalProps</span> <span class="token punctuation">{</span>
  open<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token function-variable function">setOpen</span><span class="token operator">:</span> <span class="token punctuation">(</span>open<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  initialValue<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">PreferenceModal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  open<span class="token punctuation">,</span>
  setOpen<span class="token punctuation">,</span>
  initialValue<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> PreferenceModalProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> workspaceId <span class="token operator">=</span> <span class="token function">useWorkspaceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>ConfirmDialog<span class="token punctuation">,</span> confirm<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">UseConfirm</span><span class="token punctuation">(</span>
    <span class="token string">&quot;Are you sure?&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;This action is irreversible.&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initialValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>editorOpen<span class="token punctuation">,</span> setEditorOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> mutate<span class="token operator">:</span> updateWorkspace<span class="token punctuation">,</span> isPending<span class="token operator">:</span> isUpdatingWorkspace <span class="token punctuation">}</span> <span class="token operator">=</span>
    <span class="token function">useUpdateWorkspace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> mutate<span class="token operator">:</span> removeWorkspace<span class="token punctuation">,</span> isPending<span class="token operator">:</span> isRemovingWorkspace <span class="token punctuation">}</span> <span class="token operator">=</span>
    <span class="token function">useRemoveWorkspace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleRemove</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ok <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ok<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token function">removeWorkspace</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span>
        id<span class="token operator">:</span> workspaceId<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token function-variable function">onSuccess</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          toast<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;workspace removed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onError</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          toast<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to remove workspace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>FormEvent<span class="token operator">&lt;</span>HTMLFormElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">updateWorkspace</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span>
        id<span class="token operator">:</span> workspaceId<span class="token punctuation">,</span>
        name<span class="token operator">:</span> value<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token function-variable function">onSuccess</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setEditorOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          toast<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;workspace updated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onError</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          toast<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to update workspace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>ConfirmDialog <span class="token operator">/</span><span class="token operator">&gt;</span>

      <span class="token operator">&lt;</span>Dialog open<span class="token operator">=</span><span class="token punctuation">{</span>open<span class="token punctuation">}</span> onOpenChange<span class="token operator">=</span><span class="token punctuation">{</span>setOpen<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>DialogContent className<span class="token operator">=</span><span class="token string">&quot;p-0 bg-gray-50 overflow-hidden&quot;</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>DialogHeader className<span class="token operator">=</span><span class="token string">&quot;p-4 border-b bg-white&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>DialogTitle<span class="token operator">&gt;</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>DialogTitle<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>DialogHeader<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;px-4 pb-4 flex flex-col gap-y-2&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Dialog open<span class="token operator">=</span><span class="token punctuation">{</span>editorOpen<span class="token punctuation">}</span> onOpenChange<span class="token operator">=</span><span class="token punctuation">{</span>setEditorOpen<span class="token punctuation">}</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>DialogTrigger asChild<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;px-5 py-4 bg-white rounded-lg border cursor-pointer hover:bg-gray-50&quot;</span><span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-row items-center justify-between&quot;</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">&quot;text-sm font-semibold&quot;</span><span class="token operator">&gt;</span>Workspace name<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">&quot;text-sm text-[#1264a3] hover:underline font-semibold&quot;</span><span class="token operator">&gt;</span>
                      Edit
                    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">&quot;text-sm&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>DialogTrigger<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>DialogContent className<span class="token operator">=</span><span class="token string">&quot;p-10 bg-gray-50 overflow-hidden&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>DialogHeader<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>DialogTitle<span class="token operator">&gt;</span>Rename <span class="token keyword">this</span> workspace<span class="token operator">&lt;</span><span class="token operator">/</span>DialogTitle<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>DialogHeader<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>form className<span class="token operator">=</span><span class="token string">&quot;space-y-4&quot;</span> onSubmit<span class="token operator">=</span><span class="token punctuation">{</span>handleEdit<span class="token punctuation">}</span><span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>Input
                    value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span>
                    disabled<span class="token operator">=</span><span class="token punctuation">{</span>isUpdatingWorkspace<span class="token punctuation">}</span>
                    onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                      <span class="token function">setValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">}</span>
                    required
                    autoFocus
                    minLength<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span>
                    maxLength<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">80</span><span class="token punctuation">}</span>
                    placeholder<span class="token operator">=</span><span class="token string">&quot;Workspace name e.g. &#39;Work&#39;, &#39;Personal&#39;, &#39;Home&quot;</span>
                  <span class="token operator">/</span><span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>DialogFooter<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>DialogClose asChild<span class="token operator">&gt;</span>
                      <span class="token operator">&lt;</span>Button variant<span class="token operator">=</span><span class="token string">&quot;outline&quot;</span> disabled<span class="token operator">=</span><span class="token punctuation">{</span>isUpdatingWorkspace<span class="token punctuation">}</span><span class="token operator">&gt;</span>
                        Cancel
                      <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token operator">/</span>DialogClose<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>Button disabled<span class="token operator">=</span><span class="token punctuation">{</span>isUpdatingWorkspace<span class="token punctuation">}</span><span class="token operator">&gt;</span>Save<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>DialogFooter<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>DialogContent<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Dialog<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

          <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;px-4 pb-4 flex flex-col gap-y-2&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button
              disabled<span class="token operator">=</span><span class="token punctuation">{</span>isRemovingWorkspace<span class="token punctuation">}</span>
              onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleRemove<span class="token punctuation">}</span>
              className<span class="token operator">=</span><span class="token string">&quot;flex item-center gap-x-2 px-5 py-4 bg-white rounded-lg border cursor-pointer hover:bg-gray-50 text-rose-600&quot;</span>
            <span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>TrashIcon className<span class="token operator">=</span><span class="token string">&quot;size-4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">&quot;text-sm font-semibold&quot;</span><span class="token operator">&gt;</span>Delete workspace<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>DialogContent<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Dialog<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>use-confirm, <code>UseConfirm</code>用于删除时二次确认</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/hooks/use-confirm.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/ui/button&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  Dialog<span class="token punctuation">,</span>
  DialogContent<span class="token punctuation">,</span>
  DialogDescription<span class="token punctuation">,</span>
  DialogFooter<span class="token punctuation">,</span>
  DialogHeader<span class="token punctuation">,</span>
  DialogTitle<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/ui/dialog&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> UseConfirm <span class="token operator">=</span> <span class="token punctuation">(</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  message<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>promise<span class="token punctuation">,</span> setPromise<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    <span class="token function-variable function">resolve</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">confirm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setPromise</span><span class="token punctuation">(</span><span class="token punctuation">{</span> resolve <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleClose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setPromise</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleCancle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    promise<span class="token operator">?.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">handleClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleConfirm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    promise<span class="token operator">?.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">handleClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">ConfirmDialog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Dialog open<span class="token operator">=</span><span class="token punctuation">{</span>promise <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>DialogContent className<span class="token operator">=</span><span class="token string">&quot;p-2 bg-gray-50 overflow-hidden&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>DialogHeader<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>DialogTitle<span class="token operator">&gt;</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>DialogTitle<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>DialogDescription<span class="token operator">&gt;</span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>DialogDescription<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>DialogHeader<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>DialogFooter className<span class="token operator">=</span><span class="token string">&quot;pt-2&quot;</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleCancle<span class="token punctuation">}</span> variant<span class="token operator">=</span><span class="token string">&quot;outline&quot;</span><span class="token operator">&gt;</span>
            Cancel
          <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleConfirm<span class="token punctuation">}</span><span class="token operator">&gt;</span>Confirm<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>DialogFooter<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>DialogContent<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Dialog<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>ConfirmDialog<span class="token punctuation">,</span> confirm<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,2),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","11_workspace_preference.html.vue"]]);export{r as default};
