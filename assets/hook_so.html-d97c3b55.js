import{_ as n,Y as r,Z as s,a0 as o,a1 as e,a2 as l,a4 as t,E as d}from"./framework-957baa9a.js";const i={},c=t('<h1 id="android-apk-so破解" tabindex="-1"><a class="header-anchor" href="#android-apk-so破解" aria-hidden="true">#</a> Android apk so破解</h1><p>一些算法和处理在so中执行, 可以更高效, 也相对安全</p><h2 id="_1-xposed-hook-so-并调用" tabindex="-1"><a class="header-anchor" href="#_1-xposed-hook-so-并调用" aria-hidden="true">#</a> 1. xposed hook so 并调用</h2><p>为了加快hook速度, 可以考虑黑盒调用</p><h2 id="_2-反编译分析so文件" tabindex="-1"><a class="header-anchor" href="#_2-反编译分析so文件" aria-hidden="true">#</a> 2. 反编译分析so文件</h2>',5),h={href:"https://hex-rays.com/ida-free/#download",target:"_blank",rel:"noopener noreferrer"},_=o("li",null,[e("ida64.app 打不开的解决: "),o("code",null,"sudo xattr -rd com.apple.quarantine ida64.app")],-1),p=o("li",null,[e("分析方法 "),o("ol",null,[o("li",null,"Exports可以直接查看的方法"),o("li",null,"JNI_OnLoad动态注册函数")])],-1);function u(x,k){const a=d("ExternalLinkIcon");return r(),s("div",null,[c,o("ol",null,[o("li",null,[e("工具 "),o("ul",null,[o("li",null,[e("分析工具 "),o("a",h,[e("ida pro"),l(a)])]),_])]),p])])}const m=n(i,[["render",u],["__file","hook_so.html.vue"]]);export{m as default};
