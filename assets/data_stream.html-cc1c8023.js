import{_ as i,Y as n,Z as r,a0 as e,a1 as a,a2 as t,a4 as o,E as l}from"./framework-957baa9a.js";const c={},m=e("h1",{id:"kinesis-data-streams",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kinesis-data-streams","aria-hidden":"true"},"#"),a(" Kinesis Data Streams")],-1),d={href:"https://docs.aws.amazon.com/streams/latest/dev/introduction.html",target:"_blank",rel:"noopener noreferrer"},p=e("code",null,"Amazon Kinesis Data Streams",-1),h=e("code",null,"Kinesis Data Streams applications",-1),_=e("code",null,"Kinesis Data Streams application",-1),u=e("code",null,"Amazon Kinesis Data Streams",-1),D={href:"https://aws.amazon.com/cn/kinesis/data-streams/",target:"_blank",rel:"noopener noreferrer"},K=e("p",null,"Kinesis Data Streams 连同 Kinesis Data Firehose, Kinesis Video Streams, and Kinesis Data Analytics, 是 Kinesis streaming data platform的一部分.",-1),S={href:"https://aws.amazon.com/big-data/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://aws.amazon.com/streaming-data/",target:"_blank",rel:"noopener noreferrer"},b=o('<p>Topics</p><ul><li>我可以使用 Kinesis Data Streams 做什么?</li><li>使用 Kinesis Data Streams 的好处</li><li>相关服务</li></ul><h2 id="_1-我可以使用-kinesis-data-streams-做什么" tabindex="-1"><a class="header-anchor" href="#_1-我可以使用-kinesis-data-streams-做什么" aria-hidden="true">#</a> 1. 我可以使用 Kinesis Data Streams 做什么?</h2><p>你可以将 Kinesis Data Streams 用于快速和持续的数据采集和汇总. 可以使用的数据类型包括IT基础设置日志数据, 应用日志, 社交媒体, 商业数据提要和 web 点击流(web clickstream data), 由于数据采集和处理的响应时间是实时的, 所以处理通常是轻量化的.</p><p>下面是使用 Kinesis Data Streams 的典型场景:</p><ul><li><p>加速日志和数据采集和处理</p><blockquote><p>可以有生产者直接推送数据到流中, 比如推送日志和应用数据, 它们可以在几秒钟内处理. 这可以避免在前端或应用服务失败时丢失日志数据. Kinesis Data Streams 提供加速数据采集, 因为你不需要在提交采集之前在服务器上批处理那些数据.</p></blockquote></li><li><p>实时指标和报告</p><blockquote><p>你可以将收集进 kinesis Data Streams 的数据用于简单分析和实时报告, 比如你的数据处理系统可以在数据流入时, 处理系统和应用日志的指标和报告, 而不是等待接受批量数据.</p></blockquote></li><li><p>实时数据分析</p><blockquote><p>这结合了并行处理的能力和实时数据的价值, 比如实时处理网站点击流, 使用多个不同的并行运行的 Kinesis Data Streams applications 分析网站可用性参与度(site usability engagement)</p></blockquote></li><li><p>复杂的流处理</p><blockquote><p>你可以创建 Directed Acyclic Graphs (DAGs) of Kinesis Data Streams applications 和数据流, 这通常涉及到, 将数据从 Kinesis Data Streams applications 放入到另一个流中, 用于下游不同的 Kinesis Data Streams applications 处理.</p></blockquote></li></ul><h2 id="_2-使用-kinesis-data-streams-的好处" tabindex="-1"><a class="header-anchor" href="#_2-使用-kinesis-data-streams-的好处" aria-hidden="true">#</a> 2. 使用 Kinesis Data Streams 的好处</h2><p>尽管你可以使用 Kinesis Data Streams 解决各种流数据问题, 但是通常的做法, 还是做数据的实时汇总, 然后加载汇总的数据到数据仓库或map-reduce集群中.</p><p>放入 Kinesis Data Streams 的数据, 确保有耐久性和弹性, 在一条记录被放入流中和可获取到的之间的延迟, 通常少于1秒. 换句话说, 在数据被加入到流以后, Kinesis Data Streams application 几乎立刻就可以消费流中的数据, Kinesis Data Streams 的托管服务减轻了你创建和运行数据采集管道的操作负担. 你可以创建 map-reduce-type 流式应用, Kinesis Data Streams 的弹性能力使你能够缩放流, 确保在数据记录过期前不会丢失数据.</p><p>多个 Kinesis Data Streams 应用可以从一个流中消费数据, 因此多个行为, 像归档和处理, 可以并行且独立的运行. 比如两个应用从同一个流中读取数据, 第一个应用计算运行聚合并更新到 Amazon DynamoDB 表, 第二个应用压缩归档数据到数据存储, 比如 Amazon S3, 带有聚合数据的 DynamoDB 表会被 dashboard 读取以提供最新报告.</p><p>Kinesis Client Library 启用了流中数据的容错消费, 并为 Kinesis Data Streams 应用提供缩放支持</p><h2 id="_3-相关服务" tabindex="-1"><a class="header-anchor" href="#_3-相关服务" aria-hidden="true">#</a> 3. 相关服务</h2>',12),f={href:"https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-kinesis.html",target:"_blank",rel:"noopener noreferrer"};function A(z,g){const s=l("ExternalLinkIcon");return n(),r("div",null,[m,e("p",null,[a("文档链接: "),e("a",d,[a("https://docs.aws.amazon.com/streams/latest/dev/introduction.html"),t(s)])]),e("p",null,[a("你可以使用"),p,a("实时收集和处理大量的数据记录流. 你可以创建数据处理程序, 被称为"),h,a(", 一个典型的"),_,a("从数据记录流中读取数据. 这些应用使用Kinesis Client Library(KCL), 可以运行在Amazon EC2实例上. 你可以发送处理过的记录到dashboard, 生成警报, 动态更改价格和广告策略, 或者发送数据到各种其他AWS服务. 关于"),u,a("功能和定价的信息, 参考"),e("a",D,[a("Amazon Kinesis Data Streams"),t(s)])]),K,e("p",null,[a("关于AWS大数据解决方案的信息, 参阅"),e("a",S,[a("Big Data on AWS"),t(s)]),a(". 关于更多AWS流数据解决方案的信息, 参阅"),e("a",k,[a("What is Streaming Data"),t(s)])]),b,e("p",null,[a("关于使用 Amazon EMR clusters 直接读取处理 Kinesis data streams 的更多信息, 参阅"),e("a",f,[a("Kinesis Connector"),t(s)]),a(".")])])}const q=i(c,[["render",A],["__file","data_stream.html.vue"]]);export{q as default};
