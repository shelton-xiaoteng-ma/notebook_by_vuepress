import{_ as e,Y as o,Z as c,a0 as n,a1 as s,a2 as p,a4 as a,E as l}from"./framework-957baa9a.js";const u={},i=a(`<h1 id="json格式" tabindex="-1"><a class="header-anchor" href="#json格式" aria-hidden="true">#</a> JSON格式</h1><p>用于序列化, 内置包picking, 将变量序列化成bytes类型, 兼容差,仅适用Python</p><h2 id="_1-序列化和反序列化" tabindex="-1"><a class="header-anchor" href="#_1-序列化和反序列化" aria-hidden="true">#</a> 1. 序列化和反序列化</h2><ul><li><p>json默认支持序列化Python的数据类型: list, dict等</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json
d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> score<span class="token operator">=</span><span class="token number">88</span><span class="token punctuation">)</span>
<span class="token comment"># 序列化</span>
s <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>d<span class="token punctuation">)</span>
s <span class="token operator">==</span> <span class="token string">&#39;{&quot;age&quot;: 20, &quot;score&quot;: 88, &quot;name&quot;: &quot;Bob&quot;}&#39;</span>

s <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>s<span class="token punctuation">,</span> separators<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token comment"># separators 用来解决:后面带空格问题, ensure_ascii解决中文编码问题</span>

<span class="token comment"># 反序列化</span>
d <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_2-序列化其他" tabindex="-1"><a class="header-anchor" href="#_2-序列化其他" aria-hidden="true">#</a> 2. 序列化其他</h2><ul><li><p>序列化类</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json

<span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> score<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age
        self<span class="token punctuation">.</span>score <span class="token operator">=</span> score


<span class="token comment"># 实现一个方法用于序列化</span>
<span class="token keyword">def</span> <span class="token function">student2dict</span><span class="token punctuation">(</span>std<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> std<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> std<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
        <span class="token string">&#39;score&#39;</span><span class="token punctuation">:</span> std<span class="token punctuation">.</span>score
    <span class="token punctuation">}</span>

<span class="token comment"># 反序列化</span>
<span class="token keyword">def</span> <span class="token function">dict2student</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> Student<span class="token punctuation">(</span>d<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

s <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span>
<span class="token comment"># 便可序列化和反序列化对象</span>
<span class="token builtin">str</span> <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>s<span class="token punctuation">,</span> default<span class="token operator">=</span>student2dict<span class="token punctuation">)</span>
student_class <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_str<span class="token punctuation">,</span> object_hook<span class="token operator">=</span>dict2student<span class="token punctuation">)</span>

<span class="token comment"># 序列化的高阶写法</span>
json_s <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>s<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token keyword">lambda</span> obj<span class="token punctuation">:</span> obj<span class="token punctuation">.</span>__dict__<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="第三方-demjson" tabindex="-1"><a class="header-anchor" href="#第三方-demjson" aria-hidden="true">#</a> 第三方 demjson</h2>`,7),r={href:"http://deron.meranda.us/python/demjson/",target:"_blank",rel:"noopener noreferrer"},d=a(`<ul><li>用于编码和解码json数据,</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span> <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span> <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span> <span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span> <span class="token punctuation">:</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
json <span class="token operator">=</span> demjson<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span> data <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
text <span class="token operator">=</span> demjson<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>json<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),k=n("code",null,"Setuptools 58.0.0 has removed support for 2to3 during builds, breaks demjson for Python 3.x",-1),m={href:"https://github.com/nielstron/demjson3",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># pip install demjson3</span>
<span class="token keyword">import</span> demjson3

json <span class="token operator">=</span> demjson3<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function b(g,h){const t=l("ExternalLinkIcon");return o(),c("div",null,[i,n("p",null,[n("a",r,[s("http://deron.meranda.us/python/demjson/"),p(t)])]),d,n("ul",null,[n("li",null,[n("p",null,[s("问题修复 "),k,s(" 替代方案: "),n("a",m,[s("demjson3"),p(t)])]),v])])])}const j=e(u,[["render",b],["__file","json.html.vue"]]);export{j as default};
