import{_ as e,Y as o,Z as c,a0 as n,a1 as s,a2 as t,a4 as p,E as i}from"./framework-957baa9a.js";const l={},u=n("h1",{id:"_03-convex-and-auth",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_03-convex-and-auth","aria-hidden":"true"},"#"),s(" 03 Convex and Auth")],-1),r=n("h2",{id:"_0-集成nextjs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-集成nextjs","aria-hidden":"true"},"#"),s(" 0 集成Nextjs")],-1),k={start:"0"},d={href:"https://docs.convex.dev/quickstart/nextjs",target:"_blank",rel:"noopener noreferrer"},v=p(`<li><p>配置项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> convex
npx convex dev
<span class="token comment"># 选择或创建一个项目即可</span>
<span class="token comment"># 创建后路径 /slack/convex</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>导入数据</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx convex <span class="token function">import</span> <span class="token parameter variable">--table</span> tasks sampleData.jsonl

<span class="token comment"># sampleData.jsonl</span>
<span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Buy groceries&quot;</span>, <span class="token string">&quot;isCompleted&quot;</span><span class="token builtin class-name">:</span> true<span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Go for a swim&quot;</span>, <span class="token string">&quot;isCompleted&quot;</span><span class="token builtin class-name">:</span> true<span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Integrate Convex&quot;</span>, <span class="token string">&quot;isCompleted&quot;</span><span class="token builtin class-name">:</span> false<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>expose query api</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /convex/tasks.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> query <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./_generated/server&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> get <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  args<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&quot;tasks&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>ConvexClientProvider.tsx</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/app/ConvexClientProvider.tsx</span>
<span class="token string">&quot;use client&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ConvexProvider<span class="token punctuation">,</span> ConvexReactClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;convex/react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> convex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConvexReactClient</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_CONVEX_URL</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">ConvexClientProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span> children <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> children<span class="token operator">:</span> ReactNode <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>ConvexProvider client<span class="token operator">=</span><span class="token punctuation">{</span>convex<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>ConvexProvider<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>layout.tsx</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/app/layout.tsx</span>
<span class="token operator">...</span>
<span class="token comment">// 增加如下</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConvexClientProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./ConvexClientProvider&quot;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">RootLayout</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  children<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>body className<span class="token operator">=</span><span class="token punctuation">{</span>inter<span class="token punctuation">.</span>className<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token comment">// 增加如下</span>
        <span class="token operator">&lt;</span>ConvexClientProvider<span class="token operator">&gt;</span>
          <span class="token punctuation">{</span>children<span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>ConvexClientProvider<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>显示数据</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/app/test/page.tsx</span>
<span class="token string">&quot;use client&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> useQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;convex/react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> api <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../convex/_generated/api&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> tasks <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>tasks<span class="token punctuation">.</span>get<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>main className<span class="token operator">=</span><span class="token string">&quot;flex min-h-screen flex-col items-center justify-between p-24&quot;</span><span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>tasks<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> _id<span class="token punctuation">,</span> text <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">{</span>_id<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,6),m=n("h2",{id:"_1-convex-auth",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-convex-auth","aria-hidden":"true"},"#"),s(" 1 Convex Auth")],-1),b={start:"0"},g={href:"https://labs.convex.dev/auth/setup",target:"_blank",rel:"noopener noreferrer"},h=p(`<li><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> @convex-dev/auth @auth/core
npx @convex-dev/auth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>convex schema, 融合其他表</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /convex/schema.ts</span>
<span class="token comment">// 参考tasks, 自动生成authTables</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineSchema<span class="token punctuation">,</span> defineTable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;convex/server&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> authTables <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/server&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> v <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;convex/values&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token function">defineSchema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token operator">...</span>authTables<span class="token punctuation">,</span>
  tasks<span class="token operator">:</span> <span class="token function">defineTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    isCompleted<span class="token operator">:</span> v<span class="token punctuation">.</span><span class="token function">boolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    text<span class="token operator">:</span> v<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> schema<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Set up the React provider</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/app/layout.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConvexAuthNextjsServerProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/nextjs/server&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">RootLayout</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  children<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> Readonly<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>ConvexAuthNextjsServerProvider<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>body<span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ConvexAuthNextjsServerProvider<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/app/ConvexClientProvider.tsx</span>
<span class="token comment">// in your client provider file replace ConvexProvider from convex/react with ConvexAuthNextjsProvider from @convex-dev/auth/nextjs:</span>
<span class="token string">&quot;use client&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ConvexReactClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;convex/react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ConvexAuthNextjsProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/nextjs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> convex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConvexReactClient</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_CONVEX_URL</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">ConvexClientProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span> children <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> children<span class="token operator">:</span> ReactNode <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>ConvexAuthNextjsProvider client<span class="token operator">=</span><span class="token punctuation">{</span>convex<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>ConvexAuthNextjsProvider<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>middleware.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/middleware.ts</span>
<span class="token comment">// createRouteMatcher 判断请求匹配, nextjsMiddlewareRedirect 重定向</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  convexAuthNextjsMiddleware<span class="token punctuation">,</span>
  createRouteMatcher<span class="token punctuation">,</span>
  isAuthenticatedNextjs<span class="token punctuation">,</span>
  nextjsMiddlewareRedirect<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/nextjs/server&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> isAuthPage <span class="token operator">=</span> <span class="token function">createRouteMatcher</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;/auth&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">convexAuthNextjsMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAuthPage</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isAuthenticatedNextjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">nextjsMiddlewareRedirect</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;/auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// The following matcher runs middleware on all routes</span>
  <span class="token comment">// except static assets.</span>
  matcher<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;/((?!.*\\\\..*|_next).*)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/(api|trpc)(.*)&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,4),x=n("h2",{id:"_2-github-authentication",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-github-authentication","aria-hidden":"true"},"#"),s(" 2 Github authentication")],-1),f={start:"0"},y={href:"https://labs.convex.dev/auth/config/oauth",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,"创建Github OAuth application并添加环境变量",-1),q={href:"https://dashboard.convex.dev/t/xxx/xxx/xxx/settings",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"HTTP Actions URL",-1),C=n("code",null,"Project > Settings > Deployment URL and Deploy Key > HTTP Actions URL",-1),P=n("code",null,"https://limitless-xxx.convex.site",-1),A={href:"https://github.com/settings/applications/new",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"Authorization callback URL: https://limitless-xxx.convex.site/api/auth/callback/github",-1),N=n("code",null,"Homepage URL: https://limitless-xxx.convex.site",-1),S=p(`<li><p>将github oauth 添加到convex 环境变量, 命令行或页面添加<code>Project &gt; Settings &gt; Environment Variables</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> convex <span class="token function">env</span> <span class="token builtin class-name">set</span> AUTH_GITHUB_ID yourgithubclientid
<span class="token function">pnpm</span> convex <span class="token function">env</span> <span class="token builtin class-name">set</span> AUTH_GITHUB_SECRET yourgithubsecret
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),E=p(`<li><p>应用生效</p><ul><li><p>Provider configuration</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /convex/auth.ts</span>
<span class="token keyword">import</span> GitHub <span class="token keyword">from</span> <span class="token string">&quot;@auth/core/providers/github&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> convexAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/server&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> auth<span class="token punctuation">,</span> signIn<span class="token punctuation">,</span> signOut<span class="token punctuation">,</span> store <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">convexAuth</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>GitHub<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Add sign-in button</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/features/auth/components/sign-in-card.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAuthActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> signIn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuthActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>Button
  disabled<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>
  variant<span class="token operator">=</span><span class="token string">&quot;outline&quot;</span>
  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token function">signIn</span><span class="token punctuation">(</span><span class="token string">&quot;github&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
  size<span class="token operator">=</span><span class="token string">&quot;lg&quot;</span>
  className<span class="token operator">=</span><span class="token string">&quot;w-full relative&quot;</span>
<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>FaGithub className<span class="token operator">=</span><span class="token string">&quot;size-15 absolute top-auto left-2.5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token string">&quot; &quot;</span><span class="token punctuation">}</span>
  Continue <span class="token keyword">with</span> Github
<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>在中间件设置登录后的重定向</p></li><li><p>Sign out</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token string">&quot;use client&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/ui/button&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAuthActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> signOut <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuthActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      Logged In
      <span class="token operator">&lt;</span>Button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">signOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token operator">&gt;</span>
        Sign out
      <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,3),R=n("h2",{id:"_3-google-authentication",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-google-authentication","aria-hidden":"true"},"#"),s(" 3 Google Authentication")],-1),j=n("h3",{id:"配置google-cloud",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#配置google-cloud","aria-hidden":"true"},"#"),s(" 配置Google Cloud")],-1),G=n("li",null,[n("p",null,"create project")],-1),T=n("li",null,[n("p",null,"enable APIs: APIs and Services > OAuth consent screen > External Option")],-1),U=n("p",null,"Create credentials: APIs and Services > Credentials",-1),H=n("li",null,"OAuth 2.0 Client IDs",-1),B={href:"https://limitless-xxx.convex.site/api/auth/callback/google",target:"_blank",rel:"noopener noreferrer"},L=p(`<li><p>将google oauth 添加到convex 环境变量, 命令行或页面添加<code>Project &gt; Settings &gt; Environment Variables</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> convex <span class="token function">env</span> <span class="token builtin class-name">set</span> AUTH_GOOGLE_ID yourgoogleclientid
<span class="token function">pnpm</span> convex <span class="token function">env</span> <span class="token builtin class-name">set</span> AUTH_GOOGLE_SECRET yourgooglesecret
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>应用生效</p><ul><li><p>Provider configuration</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /convex/auth.ts</span>
<span class="token keyword">import</span> Google <span class="token keyword">from</span> <span class="token string">&quot;@auth/core/providers/google&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> convexAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/server&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> auth<span class="token punctuation">,</span> signIn<span class="token punctuation">,</span> signOut<span class="token punctuation">,</span> store <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">convexAuth</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>GitHub<span class="token punctuation">,</span> Google<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Add sign-in button</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /src/features/auth/components/sign-in-card.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAuthActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> signIn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuthActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>Button
  disabled<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>
  variant<span class="token operator">=</span><span class="token string">&quot;outline&quot;</span>
  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token function">signIn</span><span class="token punctuation">(</span><span class="token string">&quot;google&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
  size<span class="token operator">=</span><span class="token string">&quot;lg&quot;</span>
  className<span class="token operator">=</span><span class="token string">&quot;w-full relative&quot;</span>
<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>FcGoogle className<span class="token operator">=</span><span class="token string">&quot;size-15 absolute top-auto left-2.5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token string">&quot; &quot;</span><span class="token punctuation">}</span>
  Continue <span class="token keyword">with</span> Google
<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li>`,2),O=p(`<h2 id="_4-password-credential" tabindex="-1"><a class="header-anchor" href="#_4-password-credential" aria-hidden="true">#</a> 4 Password Credential</h2><ol><li><p>Provider configuration</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// /convex/auth.ts</span>
<span class="token keyword">import</span> GitHub <span class="token keyword">from</span> <span class="token string">&quot;@auth/core/providers/github&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Google <span class="token keyword">from</span> <span class="token string">&quot;@auth/core/providers/google&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Password <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/providers/Password&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> convexAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@convex-dev/auth/server&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> auth<span class="token punctuation">,</span> signIn<span class="token punctuation">,</span> signOut<span class="token punctuation">,</span> store <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">convexAuth</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>GitHub<span class="token punctuation">,</span> Google<span class="token punctuation">,</span> Password<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>onPasswordSignIn/onPasswordSignUp</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">SignInCard</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> setState <span class="token punctuation">}</span><span class="token operator">:</span> SignInCardProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>email<span class="token punctuation">,</span> setEmail<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>password<span class="token punctuation">,</span> setPassword<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>pending<span class="token punctuation">,</span> setPending<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> signIn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuthActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onPasswordSignIn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>FormEvent<span class="token operator">&lt;</span>HTMLFormElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">signIn</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> email<span class="token punctuation">,</span> password<span class="token punctuation">,</span> flow<span class="token operator">:</span> <span class="token string">&quot;signIn&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span><span class="token string">&quot;Invalid email or password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onPasswordSignUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>FormEvent<span class="token operator">&lt;</span>HTMLFormElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>password <span class="token operator">!==</span> confirmPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setError</span><span class="token punctuation">(</span><span class="token string">&quot;Passwords do not match&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">signIn</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> email<span class="token punctuation">,</span> password<span class="token punctuation">,</span> flow<span class="token operator">:</span> <span class="token string">&quot;signUp&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span><span class="token string">&quot;Something went wrong&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token operator">...</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">...</span>
      <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">{</span>onPasswordSignIn<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">&quot;space-y-2.5&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Input
          disabled<span class="token operator">=</span><span class="token punctuation">{</span>pending<span class="token punctuation">}</span>
          value<span class="token operator">=</span><span class="token punctuation">{</span>email<span class="token punctuation">}</span>
          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setEmail</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span>
          placeholder<span class="token operator">=</span><span class="token string">&quot;Email&quot;</span>
          type<span class="token operator">=</span><span class="token string">&quot;email&quot;</span>
          required
        <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Input
          disabled<span class="token operator">=</span><span class="token punctuation">{</span>pending<span class="token punctuation">}</span>
          value<span class="token operator">=</span><span class="token punctuation">{</span>password<span class="token punctuation">}</span>
          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setPassword</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span>
          placeholder<span class="token operator">=</span><span class="token string">&quot;password&quot;</span>
          type<span class="token operator">=</span><span class="token string">&quot;password&quot;</span>
          required
        <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Button
          type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span>
          className<span class="token operator">=</span><span class="token string">&quot;w-full&quot;</span>
          size<span class="token operator">=</span><span class="token string">&quot;lg&quot;</span>
          disabled<span class="token operator">=</span><span class="token punctuation">{</span>pending<span class="token punctuation">}</span>
        <span class="token operator">&gt;</span>
          Continue
        <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
      <span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_5-自定义auth-providers" tabindex="-1"><a class="header-anchor" href="#_5-自定义auth-providers" aria-hidden="true">#</a> 5 自定义auth providers</h2><ol><li><p>auth.js</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// convex/auth.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> DataModel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./_generated/dataModel&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> CustomPassword <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Password</span><span class="token generic class-name"><span class="token operator">&lt;</span>DataModel<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">profile</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      email<span class="token operator">:</span> params<span class="token punctuation">.</span>email <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> params<span class="token punctuation">.</span>name <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> auth<span class="token punctuation">,</span> signIn<span class="token punctuation">,</span> signOut<span class="token punctuation">,</span> store <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">convexAuth</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>GitHub<span class="token punctuation">,</span> Google<span class="token punctuation">,</span> CustomPassword<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>signIn</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/features/auth/components/sign-up-card.tsx</span>
<span class="token keyword">const</span> <span class="token function-variable function">onPasswordSignUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>FormEvent<span class="token operator">&lt;</span>HTMLFormElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>password <span class="token operator">!==</span> confirmPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setError</span><span class="token punctuation">(</span><span class="token string">&quot;Passwords do not match&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">signIn</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password<span class="token punctuation">,</span> flow<span class="token operator">:</span> <span class="token string">&quot;signUp&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setError</span><span class="token punctuation">(</span><span class="token string">&quot;Something went wrong&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="other" tabindex="-1"><a class="header-anchor" href="#other" aria-hidden="true">#</a> Other</h2><h3 id="disabled-other-component" tabindex="-1"><a class="header-anchor" href="#disabled-other-component" aria-hidden="true">#</a> Disabled other component</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>pending<span class="token punctuation">,</span> setPending<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> onProviderSignUp <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token string">&quot;github&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;google&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">signIn</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>Button
  type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span>
  className<span class="token operator">=</span><span class="token string">&quot;w-full&quot;</span>
  size<span class="token operator">=</span><span class="token string">&quot;lg&quot;</span>
  disabled<span class="token operator">=</span><span class="token punctuation">{</span>pending<span class="token punctuation">}</span>
<span class="token operator">&gt;</span>
  Continue
<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="error-component" tabindex="-1"><a class="header-anchor" href="#error-component" aria-hidden="true">#</a> Error component</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">signIn</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> email<span class="token punctuation">,</span> password<span class="token punctuation">,</span> flow<span class="token operator">:</span> <span class="token string">&quot;signUp&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setError</span><span class="token punctuation">(</span><span class="token string">&quot;Something went wrong&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>error <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;bg-destructive/15 p-3 rounded-md flex items-center gap-x-2 text-sm text-destructive&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>TriangleAlert className<span class="token operator">=</span><span class="token string">&quot;size-4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>error<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function M(D,z){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,n("ol",k,[n("li",null,[n("p",null,[s("文档: "),n("a",d,[s("https://docs.convex.dev/quickstart/nextjs"),t(a)])])]),v]),m,n("ol",b,[n("li",null,[n("p",null,[s("文档: "),n("a",g,[s("https://labs.convex.dev/auth/setup"),t(a)])])]),h]),x,n("ol",f,[n("li",null,[n("p",null,[s("文档: "),n("a",y,[s("https://labs.convex.dev/auth/config/oauth"),t(a)])])]),n("li",null,[w,n("ul",null,[n("li",null,[n("p",null,[s("在"),n("a",q,[s("Convex dashboard"),t(a)]),s(" 找到"),_,s(", "),C,s(",类似"),P])]),n("li",null,[n("p",null,[s("在Github "),n("a",A,[s("Register a new OAuth application"),t(a)]),s(", 参数: "),I,s(", "),N,s(". 创建client secrets")])]),S])]),E]),R,j,n("ol",null,[G,T,n("li",null,[U,n("ul",null,[H,n("li",null,[s("redirect url: "),n("a",B,[s("https://limitless-xxx.convex.site/api/auth/callback/google"),t(a)])])])]),L]),O])}const V=e(l,[["render",M],["__file","03_convex_and_auth.html.vue"]]);export{V as default};
