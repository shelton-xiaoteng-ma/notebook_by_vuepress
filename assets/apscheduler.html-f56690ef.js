import{_ as e,Y as t,Z as o,a0 as n,a1 as s,a2 as i,a4 as p,E as l}from"./framework-957baa9a.js";const c={},r=n("h1",{id:"apscheduler",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#apscheduler","aria-hidden":"true"},"#"),s(" apscheduler")],-1),u={href:"https://github.com/agronholm/apscheduler",target:"_blank",rel:"noopener noreferrer"},d=p(`<ol><li><p>三种触发模式</p><ol><li>cron 定时任务触发器</li><li>interval 循环任务触发器</li><li>date 一次性任务触发器</li></ol></li><li><p>使用</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>from apscheduler.schedulers.blocking import BlockingScheduler
import time 

def print_time(x):
    time1 = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,time.localtime(time.time()))
    print(time1,&quot;模式:{}&quot;.format(x))

def clear_job(job_id):
    scheduler.remove_job(job_id)
    print(&quot;{}任务被删除了&quot;.format(job_id))

def cron_job():
    sched = BlockingScheduler()
    sched.add_job(func=print_time, args=(&#39;定时任务&#39;, ), trigger=&#39;cron&#39;, hour=&#39;*/2&#39;, minute=1, id=&#39;cron_job&#39;)
    sched.add_job(func=print_time, args=(&#39;循环任务&#39;, ), trigger=&#39;interval&#39;, seconds=3, minute=1, id=&#39;interval_job&#39;)
    sched.add_job(func=clear_job, args=(&#39;cron_job&#39;, ), trigger=&#39;date&#39;, next_run_time=&#39;2019-06-28 18:09:00&#39;, id=&#39;date_job&#39;)
    sched.start()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>一些说明</p><ol><li><p>定时任务设置hours</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">*</span> 表示每
<span class="token operator">*</span> <span class="token operator">/</span><span class="token number">2</span> <span class="token comment"># 偶数</span>
x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z  <span class="token comment"># 组合</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>一次任务</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>next_run_time <span class="token operator">=</span> <span class="token string">&#39;2019-06-28 18:09:00&#39;</span>
next_run_time <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">06</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span>
next_run_time <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">06</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 未指定时间将立即执行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>周期执行任务</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>seconds <span class="token operator">=</span> <span class="token number">2</span>  <span class="token comment"># 表示每2s执行一次</span>
start_date<span class="token operator">=</span><span class="token string">&#39;2018-12-11 09:30:00&#39;</span><span class="token punctuation">,</span> end_date<span class="token operator">=</span><span class="token string">&#39;2018-12-15 11:00:00&#39;</span>  <span class="token comment"># 也可以添加开始停止时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>cron api</p><ul><li>year (int|str) – 4-digit year</li><li>month (int|str) – month (1-12)</li><li>day (int|str) – day of the (1-31)</li><li>week (int|str) – ISO week (1-53)</li><li>day_of_week (int|str) – number or name of weekday (0-6 or mon,tue,wed,thu,fri,sat,sun), 每周第一天是星期一</li><li>hour (int|str) – hour (0-23)</li><li>minute (int|str) – minute (0-59)</li><li>second (int|str) – second (0-59)</li><li>start_date (datetime|str) – earliest possible date/time to trigger on (inclusive)</li><li>end_date (datetime|str) – latest possible date/time to trigger on (inclusive)</li><li>timezone (datetime.tzinfo|str) – time zone to use for the date/time calculations (defaults to scheduler timezone)</li><li>jitter (int|None) – advance or delay the job execution by jitter seconds at most.</li></ul></li><li><p>任务持久化</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token keyword">from</span> apscheduler<span class="token punctuation">.</span>schedulers<span class="token punctuation">.</span>background <span class="token keyword">import</span> BackgroundScheduler
    <span class="token keyword">from</span> apscheduler<span class="token punctuation">.</span>jobstores<span class="token punctuation">.</span>redis <span class="token keyword">import</span> RedisJobStore
    <span class="token keyword">from</span> apscheduler<span class="token punctuation">.</span>jobstores<span class="token punctuation">.</span>mongodb <span class="token keyword">import</span> MongoDBJobStore
    <span class="token comment"># 配置</span>
    jobs_key <span class="token operator">=</span> <span class="token string">&#39;apscheduler.jobs&#39;</span>
    run_times_key <span class="token operator">=</span> <span class="token string">&#39;apscheduler.run_times&#39;</span>
    REDIS_CONF <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;host&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;port&quot;</span><span class="token punctuation">:</span> <span class="token number">6379</span><span class="token punctuation">,</span>
        <span class="token string">&quot;db&quot;</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    jobstores <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;redis&#39;</span><span class="token punctuation">:</span> RedisJobStore<span class="token punctuation">(</span>jobs_key<span class="token operator">=</span>jobs_key<span class="token punctuation">,</span> run_times_key<span class="token operator">=</span>run_times_key<span class="token punctuation">,</span> <span class="token operator">**</span>REDIS_CONF<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&#39;mongo&#39;</span><span class="token punctuation">:</span> MongoDBJobStore<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">def</span> <span class="token function">add_job</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        sched <span class="token operator">=</span> BackgroundScheduler<span class="token punctuation">(</span>jobstores<span class="token operator">=</span>jobstores<span class="token punctuation">)</span>
        <span class="token comment"># 灵活指定jobstore</span>
        sched<span class="token punctuation">.</span>add_job<span class="token punctuation">(</span>func<span class="token operator">=</span>some_job<span class="token punctuation">,</span> trigger<span class="token operator">=</span><span class="token string">&#39;cron&#39;</span><span class="token punctuation">,</span> minute<span class="token operator">=</span><span class="token string">&#39;*/10&#39;</span><span class="token punctuation">,</span> jobstore<span class="token operator">=</span><span class="token string">&#39;redis&#39;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&#39;some_job&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,1);function m(k,v){const a=l("ExternalLinkIcon");return t(),o("div",null,[r,n("p",null,[n("a",u,[s("apscheduler"),i(a)]),s("是python的定时任务框架， 可以将定时任务持久化")]),d])}const h=e(c,[["render",m],["__file","apscheduler.html.vue"]]);export{h as default};
