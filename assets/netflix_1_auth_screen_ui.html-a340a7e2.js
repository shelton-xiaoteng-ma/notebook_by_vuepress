import{_ as n,Y as s,Z as a,a4 as t}from"./framework-957baa9a.js";const e={},o=t(`<h1 id="_1-auth-ui" tabindex="-1"><a class="header-anchor" href="#_1-auth-ui" aria-hidden="true">#</a> 1 Auth UI</h1><ol><li><p>toogle login|register</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>variant<span class="token punctuation">,</span> setVariant<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token string">&quot;login&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;register&quot;</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> toggleVariant <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setVariant</span><span class="token punctuation">(</span><span class="token punctuation">(</span>currentVarient<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  currentVarient <span class="token operator">===</span> <span class="token string">&quot;login&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;register&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;login&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>span
  className<span class="token operator">=</span><span class="token string">&quot;text-white ml-2 hover:underline cursor-pointer&quot;</span>
  onClick<span class="token operator">=</span><span class="token punctuation">{</span>toggleVariant<span class="token punctuation">}</span>
<span class="token operator">&gt;</span>
  <span class="token punctuation">{</span>variant <span class="token operator">===</span> <span class="token string">&quot;login&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;Sign up now.&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Sign in.&quot;</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>实现netflix输入框, tailwindcss笔记(<code>src/components/input.tsx</code>)</p><ol><li>peer <code>className=&quot;peer&quot; 配合 className=&quot;peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-3&quot;</code><ul><li>peer-focus</li><li>peer-placeholder-shown</li><li><code>-translate-y-1/2 scale-75</code>单独配置位置, 因为写入内容后focus和placeholder-shown都不会出现, 要保持在缩小状态</li></ul></li><li>tranform: apply transformations like <code>translate, scale, rotate, and skew</code> to elements <ul><li>translate xyz移动, 比如<code>-translate-y-3, translate-y-0</code></li><li>scale-100 原始大小, scale-75 to scale up 75%, scale-110 to scale up 110%\`</li><li>rotate-45 to rotate by 45 degrees</li><li>skew-x-6 to skew the element 6 degrees along the X axis</li></ul></li><li>transition, 为常见属性增加过渡效果 <ul><li>transition eg: colors, background, border</li><li>transition-all</li><li>transition-colors, transition-opacity, transition-transform</li><li>duration-500 for 500ms</li><li>delay-300 for 300ms delay</li><li>ease-in, ease-out, ease-in-out, ease-linear</li></ul></li><li>relative(相对于当前元素位置移动), absolute(如果有父元素(relative/absolute/fixed), 则以父元素为基准, 若没有, 则以view point) <ul><li>relative: top, right, bottom, or left</li><li>absolute: <code>Taken out of the document flow, 不再影响其他元素</code>, Pair absolute with top, right, bottom, left, and inset</li></ul></li></ol></li></ol>`,2),l=[o];function i(p,c){return s(),a("div",null,l)}const u=n(e,[["render",i],["__file","netflix_1_auth_screen_ui.html.vue"]]);export{u as default};
