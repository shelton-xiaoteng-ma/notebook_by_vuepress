import{_ as e,Y as i,Z as a,a4 as o}from"./framework-957baa9a.js";const t={},n=o('<h1 id="cloud-native" tabindex="-1"><a class="header-anchor" href="#cloud-native" aria-hidden="true">#</a> Cloud Native</h1><p>Five essential characteristics</p><ul><li>on-demand self-service</li><li>broad network access</li><li>resource pooling</li><li>rapid elasticity</li><li>measured service</li></ul><p>Four types of cloud deployment models</p><ul><li>Public</li><li>Private</li><li>Hybrid</li><li>Community</li></ul><p>Three service models</p><ul><li>as Infrastructure as a Service (Iaas)</li><li>Platform as a Service (PaaS)</li><li>Software as a Service (SaaS)</li></ul><h2 id="devops" tabindex="-1"><a class="header-anchor" href="#devops" aria-hidden="true">#</a> DevOps</h2><p>Agility&#39;s three pillars</p><ul><li>DevOps, Cultural change, automated pipelines, infrastructure as code, and immutable infrastructure are all examples of DevOps.</li><li>Microservices</li><li>Containers</li></ul><p>DevOps has three dimensions: culture, methods, and tools.</p><p>The essential characteristics of DevOps include <code>cultural change</code>, <code>automated pipelines</code>, <code>infrastructure as code</code>, <code>microservices</code>, <code>containers</code>, and <code>immutable infrastructure</code>.</p><h3 id="tdd-bdd" tabindex="-1"><a class="header-anchor" href="#tdd-bdd" aria-hidden="true">#</a> TDD &amp; BDD</h3><p>Test Driven Development: unit testing</p><p>Behavior Driven Development: integration testing, system testing, user acceptance testing</p><h3 id="ci-cd" tabindex="-1"><a class="header-anchor" href="#ci-cd" aria-hidden="true">#</a> CI/CD</h3><p>Continuous Integration and Countinuous Delivery</p><p>CI is continuously integrating code back to main/master/trunk branch. CI consists of the Plan, Code, Build, and Test phases.</p><p>CD is taking that integrated code and deploying it somewhere. CD is made up of Release, Deploy, and Operate phases.</p><p>Continuous Delivery is delivering it somewhere other than production, and Continuous Deployment is delivering it to production.</p><p>DevOps pipeline consists of Plan, Develop, Build, Test, Deploy phases. CI/CD sits in the Build and Test phases of the DevOps pipeline.</p><p>Benefits of CI</p><ul><li>faster reaction times to changes</li><li>reduced code integration risk</li><li>higher code quality because things are constantly being reviewed and tested</li><li>confirmation that the code in version control works</li></ul><h3 id="tools-for-devops-ci-and-cd" tabindex="-1"><a class="header-anchor" href="#tools-for-devops-ci-and-cd" aria-hidden="true">#</a> Tools for DevOps, CI and CD</h3><ul><li>Version control tools(Git)</li><li>Continuous Integration or Continuous Delivery (CI/CD) tools</li><li>Configuration management tools</li><li>Containerization and container orchestration tools</li><li>Monitoring and Logging tools</li><li>Collaboration and Communication tools</li></ul><h2 id="agile-and-scrum" tabindex="-1"><a class="header-anchor" href="#agile-and-scrum" aria-hidden="true">#</a> Agile and Scrum</h2><p>Scrum is a methodology that follows the Agile philosophy.</p><p>Agile is an iterative, collaborative approach to software development using small cross functional teams. The Agile approach emphasizes flexibility, interactivity, and transparency.</p><p>The Agile Manifesto describes the core values of Agile:</p><ul><li>Individuals and interactions over processes and tools</li><li>working software over comprehensive documentation</li><li>customer collaboration over contract negotiation</li><li>responding to change over following a plan</li></ul>',30),l=[n];function s(r,d){return i(),a("div",null,l)}const u=e(t,[["render",s],["__file","cloud_native.html.vue"]]);export{u as default};
