import{_ as d,Y as r,Z as c,a0 as e,a1 as a,a2 as n,a3 as o,a4 as i,E as t}from"./framework-957baa9a.js";const p={},h=i('<h1 id="安卓逆向-android" tabindex="-1"><a class="header-anchor" href="#安卓逆向-android" aria-hidden="true">#</a> 安卓逆向 Android</h1><h2 id="_1-原理准备" tabindex="-1"><a class="header-anchor" href="#_1-原理准备" aria-hidden="true">#</a> 1. 原理准备</h2><h2 id="_2-工具准备" tabindex="-1"><a class="header-anchor" href="#_2-工具准备" aria-hidden="true">#</a> 2. 工具准备</h2>',3),u=e("li",null,"jdk",-1),b={href:"https://ibotpeaches.github.io/Apktool/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/skylot/jadx",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/pxb1988/dex2jar",target:"_blank",rel:"noopener noreferrer"},v={href:"http://jd.benow.ca/#jd-gui-download",target:"_blank",rel:"noopener noreferrer"},g=e("li",null,[e("a",{href:"."},"apkScan ApkScan-PKID.jar")],-1),f=i(`<h2 id="_3-adb" tabindex="-1"><a class="header-anchor" href="#_3-adb" aria-hidden="true">#</a> 3. adb</h2><p>adb 操作手机</p><ol><li><p>adb应用位置: <code>~/Library/Android/sdk/platform-tools/adb</code></p></li><li><p>命令行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb kill-server/start-server
adb devices <span class="token parameter variable">-l</span>
adb <span class="token parameter variable">-s</span> <span class="token punctuation">{</span>device_code<span class="token punctuation">}</span> shell
adb shell    shell
<span class="token comment"># adb启动应用</span>
adb <span class="token parameter variable">-s</span> 58d8cd167d44 shell am start cn.ninebot.ninebot/.mainshell.MainActivity
<span class="token comment"># 查看app对应包</span>
adb shell <span class="token function">ps</span><span class="token operator">|</span><span class="token function">grep</span> cn.ninebot.ninebot
<span class="token comment"># 查看activi</span>
adb shell dumpsys package cn.ninebot.ninebot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_4-frida动态调试" tabindex="-1"><a class="header-anchor" href="#_4-frida动态调试" aria-hidden="true">#</a> 4. frida动态调试</h2>`,4),k=e("p",null,"安装",-1),x={href:"https://github.com/frida/frida/releases",target:"_blank",rel:"noopener noreferrer"},j=i(`<li><p>下载到手机</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb push frida-server /data/local/tmp/frida-server
adb shell <span class="token function">chmod</span> <span class="token number">777</span> /data/local/tmp/frida-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>pc</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> frida 
pip <span class="token function">install</span> frida-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),w=i(`<li><p>frida启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /data/local/tmp/
./frida-server <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>frida --no-pause -D 872QEDUA2224U -l hook_nio.js -f cn.com.weilaihui3</p><ol><li>-D device code</li><li>-U usb设备, 如果只有一台</li><li>-l 注入脚本</li><li>最后跟进程</li><li>-f start模式, 最后加上 --no-pause</li><li>-UF hook前台app, 无需加包名</li></ol></li><li><p>frida-ps -D 872QEDUA2224U 查看哪些进程</p></li>`,3),q=e("p",null,"frida和Magisk冲突",-1),y={href:"https://stackoverflow.com/questions/56316329/frida-failed-to-spawn-unable-to-access-zygote64-while-preparing-for-app-launc",target:"_blank",rel:"noopener noreferrer"},S=e("li",null,[e("p",null,[a("如果frida被app检测, 可以试试hluda-server-15.0.0-android-arm64 "),e("code",null,"https://github.com/hluwa/strongR-frida-android/releases")])],-1),A=e("h3",{id:"frida-objection",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#frida-objection","aria-hidden":"true"},"#"),a(" frida objection")],-1),U=i(`<li><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> objection
<span class="token comment"># objection --version要和收集的版本匹配</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),E={href:"https://juejin.cn/post/6844904148215808014",target:"_blank",rel:"noopener noreferrer"},D=i(`<li><p>常用命令</p><ol><li>python</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看b方法参数、返回值和调用栈的命令</span>
android hooking <span class="token function">watch</span> class_method com.xingin.alioth.others.a.b  --dump-args --dump-return --dump-backtrace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),R=e("h2",{id:"_5-android-studio-动态调试-smali",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-android-studio-动态调试-smali","aria-hidden":"true"},"#"),a(" 5. android studio 动态调试 smali")],-1),L=i(`<li><p>找到app当前activate</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell dumpsys activity <span class="token function">top</span> <span class="token operator">|</span> <span class="token function">grep</span> ACTIVITY
cn.ninebot.ninebot/.mainshell.MainActivity
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>adb shell am start -D -n cn.com.weilaihui3/.ui.activity.SplashActivity</p><ol><li>调试应用</li></ol></li>`,2),B=e("p",null,"其他:",-1),M={href:"https://blog.csdn.net/ccczhi/article/details/107597936",target:"_blank",rel:"noopener noreferrer"},N=e("h2",{id:"_6-模拟器连接as调试",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_6-模拟器连接as调试","aria-hidden":"true"},"#"),a(" 6. 模拟器连接as调试")],-1),T=e("ol",null,[e("li",null,"统一adb版本"),e("li",null,"/Applications/NoxAppPlayer.app/Contents/MacOS/adb connect 127.0.0.1:62001"),e("li",null,"android studio调试时也设置为62001")],-1),C=e("h2",{id:"_7-xposed-hook-java层",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-xposed-hook-java层","aria-hidden":"true"},"#"),a(" 7. xposed hook java层")],-1),I={href:"https://github.com/maxiaoteng001/xposeds",target:"_blank",rel:"noopener noreferrer"},z=e("ol",null,[e("li",null,"Android Studio打开时选择XposedHook, 之后就会自动安装依赖后识别app模块"),e("li",null,"在手机端安装后启用xposed模块, 即可在log查看到输出")],-1),G=e("h2",{id:"_8-源代码反编译",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_8-源代码反编译","aria-hidden":"true"},"#"),a(" 8. 源代码反编译")],-1),P=e("li",null,[a("直接操作 "),e("code",null,"apktook d xx.apk")],-1),V=i("<li>jadx直接反编译, jadx-gui直接打开即可</li><li><code>jadx -d target_dir xx.apk/xx.dex/xx.class</code></li><li>dex2jar(<code>~/Downloads/dex2jar_2.1/dex-tools-2.1-SNAPSHOT/d2j-dex2jar.sh</code>) <ol><li>支持dex2jar <code>./d2j-dex2jar.sh ~/projects/aspex_ninebot/unpack/classes6.dex</code><ol><li>得到的jar解压缩为.class文件</li><li>如果个别文件反编译失败, 参考第三项</li></ol></li><li>支持dex2smali <code>./d2j-dex2smali.sh ~/projects/aspex_ninebot/unpack/classes7.dex</code><ol><li>可用于分析和动态调试</li></ol></li><li>max上使用可能报错权限不足, 操作<code>sudo chmod +x d2j*</code></li></ol></li>",3),O={href:"http://www.javadecompilers.com/",target:"_blank",rel:"noopener noreferrer"},J=e("ol",null,[e("li",null,"支持选择反编译方案, 可以用于部分文件反编译, 如果jadx失败可以用这个")],-1),Y=e("h2",{id:"_9-加固脱壳",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_9-加固脱壳","aria-hidden":"true"},"#"),a(" 9. 加固脱壳")],-1),H=e("h2",{id:"_10-hook-so",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_10-hook-so","aria-hidden":"true"},"#"),a(" 10. hook so")],-1),K=e("h2",{id:"_11-unidbg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_11-unidbg","aria-hidden":"true"},"#"),a(" 11. unidbg")],-1),Q={href:"https://github.com/zhkl0228/unidbg",target:"_blank",rel:"noopener noreferrer"},W=e("h2",{id:"_12-微信小程序",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_12-微信小程序","aria-hidden":"true"},"#"),a(" 12. 微信小程序")],-1),X=i('<h2 id="last" tabindex="-1"><a class="header-anchor" href="#last" aria-hidden="true">#</a> last</h2><ol><li>蔚来汽车 <ol><li>sign 位于 <ol><li>package com.nio.lib.http;</li><li>com.nio.keys.sign.SignUtils.signURLAndRequestParamsUsingC(r1, r2, r3, r4, r5, r6)</li><li>/com/nio/lib/http/GateWay.class <ol><li>调用信息 ((Map)localObject3).put(&quot;sign&quot;, SignUtils.signURLAndRequestParamsUsingC(&quot;GET&quot;, paramString2, paramString3, paramString4, (Map)localObject3, null));</li><li>r1 = &quot;GET&quot;</li><li>r6 = null</li><li>r2, r3, r4, r5</li></ol></li></ol></li><li>base64解密data位于 package cn.com.weilaihui3.chargingpile;</li></ol></li><li>九号出行 <ol><li>使用梆梆加固</li></ol></li></ol><p>frida -U -l hook_baemin.js -f com.sampleapp</p><p>hashMap.put(&quot;USER-BAEDAL&quot;, b());</p><p>m0.b() &quot;&quot;&quot; StringBuilder sb2 = new StringBuilder(); for (String str10 : a02) { sb2.append(q.W(str10, &#39;|&#39;, &#39;/&#39;, false, 4)); sb2.append(&quot;|&quot;); } String sb3 = sb2.toString(); l.e(sb3, &quot;ubBuilder.toString()&quot;); try { String b12 = j.b(sb3, &quot;sbfighting&quot;); l.e(b12, &quot;crypt(input, USERAGENT_KEY)&quot;); return b12; } &quot;&quot;&quot;</p><p>package lr0.l;</p>',6);function F(Z,$){const l=t("ExternalLinkIcon"),s=t("RouterLink");return r(),c("div",null,[h,e("ol",null,[u,e("li",null,[e("a",b,[a("apktool apk to dex"),n(l)])]),e("li",null,[e("a",_,[a("JADX Dex to Java"),n(l)])]),e("li",null,[a("[dex2jar]]("),e("a",m,[a("https://github.com/pxb1988/dex2jar"),n(l)]),a(")")]),e("li",null,[a("[JD-GUI]]("),e("a",v,[a("http://jd.benow.ca/#jd-gui-download"),n(l)]),a(")")]),g]),f,e("ol",null,[e("li",null,[k,e("ol",null,[e("li",null,[e("p",null,[e("a",x,[a("https://github.com/frida/frida/releases"),n(l)])])]),j])]),w,e("li",null,[q,e("ol",null,[e("li",null,[e("a",y,[a("https://stackoverflow.com/questions/56316329/frida-failed-to-spawn-unable-to-access-zygote64-while-preparing-for-app-launc"),n(l)])])])]),S]),A,e("ol",null,[U,e("li",null,[e("p",null,[a("参考"),e("a",E,[a("objection"),n(l)])])]),D]),R,e("ol",null,[L,e("li",null,[B,e("ol",null,[e("li",null,[e("a",M,[a("smali插件未生效导致无法调试"),n(l)])])])])]),N,T,C,e("p",null,[e("a",I,[a("见项目xposeds"),n(l)]),n(s,{to:"/python/python_crawler/xposed.html"},{default:o(()=>[a("xposed")]),_:1})]),z,G,e("ol",null,[e("li",null,[a("apk to dex "),e("ol",null,[e("li",null,[a("如果app加壳, 参考"),n(s,{to:"/python/python_crawler/unpack.html"},{default:o(()=>[a("加固脱壳")]),_:1})]),P])]),e("li",null,[a("dex to jar "),e("ol",null,[V,e("li",null,[e("a",O,[a("http://www.javadecompilers.com/"),n(l)]),J])])])]),Y,e("p",null,[n(s,{to:"/docs/python/python_basic/unpack.html"},{default:o(()=>[a("加固脱壳")]),_:1})]),H,e("p",null,[n(s,{to:"/python/python_crawler/hook_so.html"},{default:o(()=>[a("hook so")]),_:1})]),K,e("p",null,[a("模拟Android运行环境, "),e("a",Q,[a("https://github.com/zhkl0228/unidbg"),n(l)])]),W,e("p",null,[n(s,{to:"/python/python_crawler/wechat_miniprogram.html"},{default:o(()=>[a("微信小程序")]),_:1})]),X])}const ae=d(p,[["render",F],["__file","android_decompile.html.vue"]]);export{ae as default};
