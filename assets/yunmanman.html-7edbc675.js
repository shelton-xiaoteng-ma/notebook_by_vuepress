import{_ as p,Y as o,Z as c,a0 as n,a1 as s,a2 as e,a4 as t,E as i}from"./framework-957baa9a.js";const l={},u=n("h1",{id:"运满满",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#运满满","aria-hidden":"true"},"#"),s(" 运满满")],-1),r=n("p",null,"[TOC]",-1),d=n("p",null,"想要解决的问题:",-1),k=n("ol",null,[n("li",null,"对运满满的配货大厅感兴趣, 响应加密状态")],-1),v=n("h2",{id:"_1-运满满微信小程序",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-运满满微信小程序","aria-hidden":"true"},"#"),s(" 1. 运满满微信小程序")],-1),m=n("li",null,[s("微信小程序反编译后调试报错, 需要在 "),n("code",null,"详情"),s(" -> "),n("code",null,"本地设置"),s(" -> 关闭"),n("code",null,"es6转es5"),s("等一系列设置")],-1),b={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch",target:"_blank",rel:"noopener noreferrer"},y=t(`<li>调试过程: <ol><li><p>加载小程序后由于无法登陆, 所以接口无法返回数据, 全局搜索<code>decrypt</code>定位到<code>_-1963279196_115/extend/common-re.mini.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> _<span class="token operator">-</span><span class="token number">1963279196_115</span><span class="token operator">/</span>extend<span class="token operator">/</span>common<span class="token operator">-</span>re<span class="token punctuation">.</span>mini<span class="token punctuation">.</span>js <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 加密工具 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">return</span> o<span class="token punctuation">.</span>de <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">e1</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> e<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">X__</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">dk</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> r<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> n <span class="token operator">+=</span> r<span class="token punctuation">;</span>
        <span class="token keyword">var</span> o <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> e<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">X__</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> o <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span><span class="token constant">U8</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> e<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">X__</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">isEx</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">51</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e<span class="token punctuation">,</span> r <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> r<span class="token punctuation">.</span>length<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> o <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> o<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">48</span> <span class="token operator">&amp;&amp;</span> e <span class="token operator">&lt;</span> <span class="token number">58</span> <span class="token operator">?</span> e <span class="token operator">-=</span> <span class="token number">48</span> <span class="token operator">:</span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">223</span> <span class="token operator">&amp;</span> e<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">65</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span> 
        i<span class="token punctuation">[</span>o<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token keyword">return</span> t <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">16</span> <span class="token operator">*</span> t <span class="token operator">+</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sign</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>t <span class="token operator">?</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span><span class="token string">&quot;key=&quot;</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">&quot;&amp;body=&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span><span class="token string">&quot;key=&quot;</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">&quot;&amp;body=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">MD5</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通过log一些变量, 发现尽管无法还原response的解密, 但是构造请求的加密过程可以追踪, 证实了步骤一的假设</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> _<span class="token operator">-</span><span class="token number">1963279196_115</span><span class="token operator">/</span>mixins<span class="token operator">/</span>basePage<span class="token punctuation">.</span>js <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 加密构造请求参数 <span class="token operator">--</span><span class="token operator">&gt;</span>
y <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> m <span class="token operator">=</span> h<span class="token punctuation">.</span>default<span class="token punctuation">.</span>de<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span><span class="token string">&quot;re-key&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">.</span>default<span class="token punctuation">.</span>de<span class="token punctuation">.</span><span class="token constant">MD5</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> 
f<span class="token punctuation">[</span><span class="token string">&quot;re-sign&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>响应中有字段<code>isEncrypted</code>, 定位到响应的解密位置, v应该就是密码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> _<span class="token operator">-</span><span class="token number">1963279196_115</span><span class="token operator">/</span>mixins<span class="token operator">/</span>basePage<span class="token punctuation">.</span>js <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;payload.ignoreLogin&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">,</span> o <span class="token operator">=</span> r<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>isEncrypt <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>isEncrypted <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>default<span class="token punctuation">.</span>de<span class="token punctuation">.</span><span class="token function">e1</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>data<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token number">200</span> <span class="token operator">!==</span> r<span class="token punctuation">.</span>statusCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">a</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>分析请求加密过程发现一段奇怪的字符串, 类似 <code>o6L07FylH6OhS1GFWG7Rr7FRAswUVE7bBtYRj+1ZOvrflxpuC78e3eawsa1G51FmV23+OSSEJ7rqhcI9S2MahQ==#####</code>, 通过调用<code>dk</code>后生成长度52的字符串(实际上就是密钥), 之后用这个字符串生成<code>multiSearch</code>请求的参数</p></li><li><p>发现<code>e1</code>方法中传入的<code>v</code>实际上就是密钥的后16位</p></li><li><p>验证猜测成立</p></li></ol></li>`,1),g={href:"https://www.ymm56.com/risk-encrypt/encrypt/key-generate",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"dk",-1),w=n("ol",null,[n("li",null,"加密内容长度对10取余 *16 为密码"),n("li",null,"aes解密得到真实密钥")],-1),f={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch",target:"_blank",rel:"noopener noreferrer"},_=n("li",null,"接收到响应后, 用密钥的后16位作为密码, 解密",-1),x=n("li",null,"所有加密采用aes.ECB, 填充方式: pkcs7padding, 数据块:128位",-1),R=n("li",null,[s("key-generate产生的密钥会有效一段时间, 可以通过发送请求的"),n("code",null,"re-key"),s(", "),n("code",null,"re-sign"),s("来判断是否一致")],-1),E=n("h2",{id:"_2-app-运满满司机客户端",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-app-运满满司机客户端","aria-hidden":"true"},"#"),s(" 2. app 运满满司机客户端")],-1),O=t(`<li><p>检测frida</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>package com.mb.lib.device.security;

class SecurityServiceImpl(){
    private boolean continueCheckFrida(CheckOption checkOption, final ContinueCheckListener continueCheckListener) {
        ...
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),j=t(`<p>当天货源接口 app当天货源在匿名和用户登陆后, 分别使用不同的接口</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>// 加密方式也不同, 登陆后接口返回参数有etype=1, 调用
// 响应包含 var tmp etype三个参数
if (rawResponseObj.geteType() == 0) {
    response = decryptByPShell(response, rawResponseObj);
} else {
    response = decryptByIE(response, rawResponseObj, isEmpty);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解密后发现, 订单列表等一些请求做了压缩</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>package com.ymm.lib.commonbusiness.ymmbase.network.interceptor;

public class EncryptInterceptor extends BaseInterceptor{
    if (isEmpty &amp;&amp; (split = response.header(&quot;M-X&quot;).split(&quot;&amp;&quot;)) != null) {
        for (String str : split) {
            if (str.trim().equals(&quot;type=2&quot;)) {
                try {
                    response.body().contentLength();
                    response.request().url().toString();
                    byte[] decompress = DelfateUtil.decompress(response.body().bytes());
                    int length = decompress.length;
                    response = response.newBuilder().body(ResponseBody.create(response.body().contentType(), new String(decompress, this.mCharset.name()))).removeHeader(&quot;M-X&quot;).build();
                } catch (Exception e2) {
                }
            }
        }
    }
}


// package com.ymm.lib.commonbusiness.ymmbase.util.DelfateUtil

public static byte[] decompress(byte[] bArr)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),S={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/multiSearch",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>package com.ymm.lib.commonbusiness.ymmbase.network.interceptor;

public class EncryptInterceptor extends BaseInterceptor{
    private c iEncrypt = cl.a.a(&quot;random_cipher&quot;);

    private Response decryptByIE(Response response, RawResponseObj rawResponseObj, boolean z2) throws IOException {
        PatchProxyResult proxy = PatchProxy.proxy(new Object[]{response, rawResponseObj, new Byte(z2 ? (byte) 1 : 0)}, this, changeQuickRedirect, false, 20146, new Class[]{Response.class, RawResponseObj.class, Boolean.TYPE}, Response.class);
        if (proxy.isSupported) {
            return (Response) proxy.result;
        }
        if (rawResponseObj.isVarEmpty()) {
            throw new EncryptException(201);
        } else if (z2) {
            try {
                byte[] c2 = this.iEncrypt.c(com.ijiami.a.a(rawResponseObj.getVar()));
                if (c2.length != 0) {
                    return response.newBuilder().body(ResponseBody.create(response.body().contentType(), c2)).build();
                }
                throw new EncryptException(202);
            } catch (Exception unused) {
                throw new EncryptException(200);
            }
        } else {
            try {
                String c3 = this.iEncrypt.c(rawResponseObj.getVar());
                if (!TextUtils.isEmpty(c3)) {
                    return response.newBuilder().body(ResponseBody.create(response.body().contentType(), c3)).build();
                }
                throw new EncryptException(202);
            } catch (Exception unused2) {
                throw new EncryptException(200);
            }
        }
    }
}

// cl.a
// return cl.e.a
public byte[] a(byte[] bArr) throws Exception {
    PatchProxyResult proxy = PatchProxy.proxy(new Object[]{bArr}, this, changeQuickRedirect, false, 4486, new Class[]{byte[].class}, byte[].class);
    return proxy.isSupported ? (byte[]) proxy.result : d.a(bArr);
}

// cl.d.a
public static byte[] a(byte[] bArr) throws Exception {
    PatchProxyResult proxy = PatchProxy.proxy(new Object[]{bArr}, null, changeQuickRedirect, true, 4480, new Class[]{byte[].class}, byte[].class);
    return proxy.isSupported ? (byte[]) proxy.result : JMEncryptBoxByRandom.a(bArr);
}

// 解密
// this.iEncrypt.c
// com.ijiami.JMEncryptBoxByRandom
public class JMEncryptBoxByRandom {
    public static native byte[] dencryptByRandom(byte[] bArr);

    public static native byte[] encryptByRandom(byte[] bArr);

    static {
        new JMEncryptBox();
    }

    public static byte[] c(byte[] bArr) throws Exception {
        return dencryptByRandom(bArr);
    }
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),B={href:"https://www.ymm56.com/ymm-cargo-search-app/cargoes/visitorSearch",target:"_blank",rel:"noopener noreferrer"},P=t(`<div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>package com.ymm.lib.commonbusiness.ymmbase.network.interceptor;

private Response decryptByPShell(Response response, RawResponseObj rawResponseObj) throws IOException {
    PatchProxyResult proxy = PatchProxy.proxy(new Object[]{response, rawResponseObj}, this, changeQuickRedirect, false, 20147, new Class[]{Response.class, RawResponseObj.class}, Response.class);
    if (proxy.isSupported) {
        return (Response) proxy.result;
    }
    URL url = new URL(response.request().url().toString());
    if (SecurityCenter.getInstance().needRefresh(rawResponseObj.getOverload(), rawResponseObj.getTemp(), rawResponseObj.getVar())) {
        SecurityCenter.getInstance().requestRefreshAlgorithm(new RefreshParam.Builder().setKey(url.toString()).setOldPolicyNumber(rawResponseObj.getNumber()).setPath(rawResponseObj.getPath()).setOverload(rawResponseObj.getOverload()).setAim(rawResponseObj.getAim()).build());
    }
    if (!rawResponseObj.isTmpVarEmpty()) {
        DecryptResultObj decrypt = SecurityCenter.getInstance().decrypt(url.toString(), rawResponseObj.getVar(), buildFactors(response.request()), rawResponseObj.getTemp(), Integer.valueOf(rawResponseObj.getNumber()));
        if (decrypt.getDecrypt() == null || decrypt.getDecrypt().length &lt;= 0) {
            SecurityCenter.getInstance().requestRefreshAlgorithm(new RefreshParam.Builder().setKey(url.toString()).setOldPolicyNumber(rawResponseObj.getNumber()).setPath(rawResponseObj.getPath()).setOverload(rawResponseObj.getOverload()).setAim(rawResponseObj.getAim()).build());
            throw new EncryptException(102);
        }
        return response.newBuilder().body(ResponseBody.create(response.body().contentType(), decrypt.getDecrypt())).build();
    }
    throw new EncryptException(101);
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function A(J,C){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,d,k,v,n("ol",null,[m,n("li",null,[s("调试接口: "),n("a",b,[s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch"),e(a)]),s(" 响应为aes加密 "),n("ol",null,[y,n("li",null,[s("请求逻辑 "),n("ol",null,[n("li",null,[s("请求"),n("a",g,[s("https://www.ymm56.com/risk-encrypt/encrypt/key-generate"),e(a)]),s(" 返回加密后的密钥, 然后通过自定义解密方法"),h,s("解密 "),w]),n("li",null,[s("发送"),n("a",f,[s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/applet/multiSearch"),e(a)]),s("时, 根据前一个请求的密钥, 传输密钥的md5和sign来标记请求")]),_,x,R])])])])]),E,n("ol",null,[O,n("li",null,[j,n("ul",null,[n("li",null,[n("p",null,[s("登陆搜索: "),n("a",S,[s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/multiSearch"),e(a)])]),q]),n("li",null,[n("p",null,[s("访客搜索: "),n("a",B,[s("https://www.ymm56.com/ymm-cargo-search-app/cargoes/visitorSearch"),e(a)])]),P])])])])])}const D=p(l,[["render",A],["__file","yunmanman.html.vue"]]);export{D as default};
