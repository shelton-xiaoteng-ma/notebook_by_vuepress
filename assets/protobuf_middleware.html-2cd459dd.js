import{_ as s,Y as a,Z as t,$ as p,a0 as n,a1 as e,a4 as o}from"./framework-957baa9a.js";const c={},i=n("h1",{id:"在scrapy中间件中处理请求",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在scrapy中间件中处理请求","aria-hidden":"true"},"#"),e(" 在scrapy中间件中处理请求")],-1),l=n("ul",null,[n("li",null,"增加body"),n("li",null,"访问meta"),n("li",null,"修改headers"),n("li",null,"protobuf调用")],-1),u=o(`<ol><li><p>定义中间件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">DemoScrapyDownloaderMiddleware</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">process_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        
        <span class="token comment"># 添加body</span>
        _url <span class="token operator">=</span> request<span class="token punctuation">.</span>_get_url<span class="token punctuation">(</span><span class="token punctuation">)</span>
        meta_data <span class="token operator">=</span> request<span class="token punctuation">.</span>_meta
        <span class="token keyword">if</span> <span class="token string">&#39;v2/entities:search&#39;</span> <span class="token keyword">in</span> _url<span class="token punctuation">:</span>
            spider<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;添加protobuf格式的body, 并更新headers&#39;</span><span class="token punctuation">)</span>
            bd <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">)</span>
            bd<span class="token punctuation">.</span>limit <span class="token operator">=</span> <span class="token number">120</span>
            bd<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">.</span>status <span class="token operator">=</span> meta_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">)</span>
            bd<span class="token punctuation">.</span>field15 <span class="token operator">=</span> <span class="token number">1</span>
            spider<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;MessageToJson(bd): </span><span class="token interpolation"><span class="token punctuation">{</span>MessageToJson<span class="token punctuation">(</span>bd<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
            payload <span class="token operator">=</span> bd<span class="token punctuation">.</span>SerializeToString<span class="token punctuation">(</span><span class="token punctuation">)</span>
            request<span class="token punctuation">.</span>_set_body<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
            <span class="token comment"># 添加headers, 响应格式为json, 因为protobuf的格式可能会解析异常</span>
            headers <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;Pragma&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;Cache-Control&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;cache-control&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;x-app-type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;groundup&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;content-type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/x-protobuf&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
            scrapy_headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> headers<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                scrapy_headers<span class="token punctuation">[</span>k<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>
            request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>update<span class="token punctuation">(</span>scrapy_headers<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>settings.py</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># settings.py</span>
DOWNLOADER_MIDDLEWARES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;demo_scrapy.middlewares.DemoScrapyDownloaderMiddleware&#39;</span><span class="token punctuation">:</span> <span class="token number">739</span><span class="token punctuation">,</span>
    <span class="token string">&#39;demo_scrapy.middlewares.ProxyMiddleware&#39;</span><span class="token punctuation">:</span> <span class="token number">740</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,1);function r(d,k){return a(),t("div",null,[i,l,p(" more "),u])}const m=s(c,[["render",r],["__file","protobuf_middleware.html.vue"]]);export{m as default};
